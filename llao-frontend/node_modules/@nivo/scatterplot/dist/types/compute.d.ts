import { ComputedSerie } from '@nivo/scales';
import { ScatterPlotCommonProps, ScatterPlotDatum, ScatterPlotNodeData } from './types';
export declare const getNodeSizeGenerator: <RawDatum extends ScatterPlotDatum>(size: ScatterPlotCommonProps<RawDatum>["nodeSize"]) => (datum: Omit<ScatterPlotNodeData<RawDatum>, "color" | "size">) => number;
export declare const computePoints: <RawDatum extends ScatterPlotDatum>({ series, formatX, formatY, getNodeId, }: {
    series: ComputedSerie<{
        id: string | number;
    }, RawDatum>[];
    formatX: (value: RawDatum["x"]) => string | number;
    formatY: (value: RawDatum["x"]) => string | number;
    getNodeId: (d: Omit<ScatterPlotNodeData<RawDatum>, "id" | "size" | "color">) => string;
}) => Omit<ScatterPlotNodeData<RawDatum>, "size" | "color">[];
//# sourceMappingURL=compute.d.ts.map