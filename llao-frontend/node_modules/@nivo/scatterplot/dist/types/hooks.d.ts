import { ScatterPlotCommonProps, ScatterPlotDataProps, ScatterPlotDatum, ScatterPlotNodeData } from './types';
export declare const useScatterPlot: <RawDatum extends ScatterPlotDatum>({ data, xScaleSpec, xFormat, yScaleSpec, yFormat, width, height, nodeId, nodeSize, colors, }: {
    data: ScatterPlotDataProps<RawDatum>["data"];
    xScaleSpec: ScatterPlotCommonProps<RawDatum>["xScale"];
    xFormat?: ScatterPlotCommonProps<RawDatum>["xFormat"];
    yScaleSpec: ScatterPlotCommonProps<RawDatum>["yScale"];
    yFormat?: ScatterPlotCommonProps<RawDatum>["yFormat"];
    width: number;
    height: number;
    nodeId: ScatterPlotCommonProps<RawDatum>["nodeId"];
    nodeSize: ScatterPlotCommonProps<RawDatum>["nodeSize"];
    colors: ScatterPlotCommonProps<RawDatum>["colors"];
}) => {
    xScale: import("@nivo/scales").ScaleLog | import("@nivo/scales").ScaleSymlog | import("@nivo/scales").ScaleLinear<number> | import("@nivo/scales").ScaleTime<Date | import("d3-scale").NumberValue> | import("@nivo/scales").ScalePoint<Exclude<RawDatum["x"], null>> | import("@nivo/scales").ScaleBand<Exclude<RawDatum["x"], null>>;
    yScale: import("@nivo/scales").ScaleLog | import("@nivo/scales").ScaleSymlog | import("@nivo/scales").ScaleLinear<number> | import("@nivo/scales").ScaleTime<Date | import("d3-scale").NumberValue> | import("@nivo/scales").ScalePoint<Exclude<RawDatum["y"], null>> | import("@nivo/scales").ScaleBand<Exclude<RawDatum["y"], null>>;
    nodes: ScatterPlotNodeData<RawDatum>[];
    legendData: {
        id: string | number;
        label: string | number;
        color: string;
    }[];
};
export declare const useScatterPlotAnnotations: <RawDatum extends ScatterPlotDatum>(items: ScatterPlotNodeData<RawDatum>[], annotations: ScatterPlotCommonProps<RawDatum>["annotations"]) => import("@nivo/annotations").BoundAnnotation<ScatterPlotNodeData<RawDatum>>[];
//# sourceMappingURL=hooks.d.ts.map