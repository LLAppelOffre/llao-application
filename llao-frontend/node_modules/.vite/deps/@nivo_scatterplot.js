import {
  J,
  O,
  R,
  require_isNumber
} from "./chunk-NOKX7PNT.js";
import {
  E as E2,
  F,
  j as j2,
  q as q2
} from "./chunk-DP6D7EXL.js";
import {
  V,
  W,
  hn as hn2,
  j,
  q
} from "./chunk-KLR4ML3O.js";
import {
  $r,
  AnimatedObject,
  Dr,
  E2 as E,
  FluidValue,
  Fr,
  L,
  M,
  Pt,
  Rn,
  Rt,
  T,
  addFluidObserver,
  bn,
  callFluidObservers,
  cn,
  colors2,
  createHost,
  createStringInterpolator2,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  hasFluidValue,
  hn,
  hr,
  is,
  kn,
  linear,
  removeFluidObserver,
  require_get,
  require_isPlainObject,
  require_isString,
  toArray,
  useTransition,
  wn,
  z
} from "./chunk-FQLOU77L.js";
import {
  require_jsx_runtime
} from "./chunk-OT5EQO2H.js";
import {
  require_react_dom
} from "./chunk-WRD5HZVH.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@nivo/scatterplot/dist/nivo-scatterplot.mjs
var import_react = __toESM(require_react(), 1);
var import_get = __toESM(require_get(), 1);
var import_isString = __toESM(require_isString(), 1);
var import_isNumber = __toESM(require_isNumber(), 1);
var import_isPlainObject = __toESM(require_isPlainObject(), 1);

// node_modules/@nivo/scatterplot/node_modules/@react-spring/web/dist/react-spring_web.modern.mjs
var import_react_dom = __toESM(require_react_dom(), 1);
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "") return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox,
    ...attributes
  } = props;
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(
    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (n2) => "-" + n2.toLowerCase()
    ))
  );
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i2) => {
    instance.setAttribute(name, values[i2]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor({ x, y, z: z2, ...style }) {
    const inputs = [];
    const transforms = [];
    if (x || y || z2) {
      inputs.push([x || 0, y || 0, z2 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        // prettier-ignore
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value)) return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(
          key === "rotate3d" ? ([x2, y2, z22, deg]) => [
            `rotate3d(${x2},${y2},${z22},${addUnit(deg, unit)})`,
            isValueIdentity(deg, 0)
          ] : (input) => [
            `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
            isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i2) => {
      const arg1 = getFluidValue(input[0]);
      const [t2, id] = this.transforms[i2](
        is.arr(arg1) ? arg1 : input.map(getFluidValue)
      );
      transform += " " + t2;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(count) {
    if (count == 1)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && addFluidObserver(value, this)
        )
      );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(count) {
    if (count == 0)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && removeFluidObserver(value, this)
        )
      );
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props
});
var animated = host.animated;

// node_modules/@nivo/scatterplot/dist/nivo-scatterplot.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function A() {
  return A = Object.assign ? Object.assign.bind() : function(e2) {
    for (var o2 = 1; o2 < arguments.length; o2++) {
      var n2 = arguments[o2];
      for (var i2 in n2) ({}).hasOwnProperty.call(n2, i2) && (e2[i2] = n2[i2]);
    }
    return e2;
  }, A.apply(null, arguments);
}
function q3(e2, o2) {
  if (null == e2) return {};
  var n2 = {};
  for (var i2 in e2) if ({}.hasOwnProperty.call(e2, i2)) {
    if (-1 !== o2.indexOf(i2)) continue;
    n2[i2] = e2[i2];
  }
  return n2;
}
var J2 = function(e2) {
  if ("function" == typeof e2) return e2;
  if ((0, import_isNumber.default)(e2)) return function() {
    return e2;
  };
  if (function(e3) {
    return (0, import_isPlainObject.default)(e3);
  }(e2)) {
    if (!(0, import_isString.default)(e2.key)) throw new Error("symbolSize is invalid, key should be a string pointing to the property to use to determine node size");
    if (!Array.isArray(e2.values) || 2 !== e2.values.length) throw new Error("symbolSize is invalid, values spec should be an array containing two values, min and max");
    if (!Array.isArray(e2.sizes) || 2 !== e2.sizes.length) throw new Error("symbolSize is invalid, sizes spec should be an array containing two values, min and max");
    var o2 = linear().domain([e2.values[0], e2.values[1]]).range([e2.sizes[0], e2.sizes[1]]);
    return function(n2) {
      return o2((0, import_get.default)(n2, e2.key));
    };
  }
  throw new Error("nodeSize is invalid, it should be either a function, a number or an object");
};
var K = function(o2) {
  var n2, i2 = o2.data, t2 = o2.xScaleSpec, r2 = o2.xFormat, a2 = o2.yScaleSpec, d2 = o2.yFormat, s = o2.width, c = o2.height, f = o2.nodeId, h = o2.nodeSize, v = o2.colors, m = (0, import_react.useMemo)(function() {
    return hn2(i2, t2, a2, s, c);
  }, [i2, t2, a2, s, c]), g = m.series, p = m.xScale, y = m.yScale, M2 = hn(r2), x = hn(d2), b = bn(f), w = (0, import_react.useMemo)(function() {
    return function(e2) {
      var o3 = e2.series, n3 = e2.formatX, i3 = e2.formatY, t3 = e2.getNodeId, r3 = [];
      return o3.forEach(function(e3) {
        e3.data.forEach(function(o4, a3) {
          var d3 = { index: r3.length, serieIndex: a3, serieId: e3.id, x: o4.position.x, xValue: o4.data.x, formattedX: n3(o4.data.x), y: o4.position.y, yValue: o4.data.y, formattedY: i3(o4.data.y), data: o4.data };
          r3.push(A({}, d3, { id: t3(d3) }));
        });
      }), r3;
    }({ series: g, formatX: M2, formatY: x, getNodeId: b });
  }, [g, M2, x, b]), S = (0, import_react.useMemo)(function() {
    return J2(n2);
  }, [n2 = h]), k = hr(v, "serieId");
  return { xScale: p, yScale: y, nodes: (0, import_react.useMemo)(function() {
    return w.map(function(e2) {
      return A({}, e2, { size: S(e2), color: k({ serieId: e2.serieId }) });
    });
  }, [w, S, k]), legendData: (0, import_react.useMemo)(function() {
    return g.map(function(e2) {
      return { id: e2.id, label: e2.id, color: k({ serieId: e2.id }) };
    });
  }, [g, k]) };
};
var Q = function(e2, o2) {
  return O({ data: e2, annotations: o2, getPosition: function(e3) {
    return { x: e3.x, y: e3.y };
  }, getDimensions: function(e3) {
    return { size: e3.size, width: e3.size, height: e3.size };
  } });
};
var Z = function(e2) {
  return e2 / 2;
};
var $ = { xScale: { type: "linear", min: 0, max: "auto" }, yScale: { type: "linear", min: 0, max: "auto" }, enableGridX: true, enableGridY: true, axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, nodeId: function(e2) {
  return e2.serieId + "." + e2.index;
}, nodeSize: 9, nodeComponent: function(e2) {
  var n2 = e2.node, i2 = e2.style, t2 = e2.blendMode, r2 = e2.isInteractive, a2 = e2.onMouseEnter, d2 = e2.onMouseMove, l = e2.onMouseLeave, u = e2.onMouseDown, s = e2.onMouseUp, c = e2.onClick, f = e2.onDoubleClick, h = (0, import_react.useCallback)(function(e3) {
    return null == a2 ? void 0 : a2(n2, e3);
  }, [n2, a2]), v = (0, import_react.useCallback)(function(e3) {
    return null == d2 ? void 0 : d2(n2, e3);
  }, [n2, d2]), m = (0, import_react.useCallback)(function(e3) {
    return null == l ? void 0 : l(n2, e3);
  }, [n2, l]), g = (0, import_react.useCallback)(function(e3) {
    return null == u ? void 0 : u(n2, e3);
  }, [n2, u]), p = (0, import_react.useCallback)(function(e3) {
    return null == s ? void 0 : s(n2, e3);
  }, [n2, s]), y = (0, import_react.useCallback)(function(e3) {
    return null == c ? void 0 : c(n2, e3);
  }, [n2, c]), M2 = (0, import_react.useCallback)(function(e3) {
    return null == f ? void 0 : f(n2, e3);
  }, [n2, f]);
  return (0, import_jsx_runtime.jsx)(animated.circle, { cx: i2.x, cy: i2.y, r: i2.size.to(Z), fill: i2.color, style: { mixBlendMode: t2 }, onMouseEnter: r2 ? h : void 0, onMouseMove: r2 ? v : void 0, onMouseLeave: r2 ? m : void 0, onMouseDown: r2 ? g : void 0, onMouseUp: r2 ? p : void 0, onClick: r2 ? y : void 0, onDoubleClick: r2 ? M2 : void 0 });
}, colors: { scheme: "nivo" }, isInteractive: true, debugMesh: false, tooltip: function(e2) {
  var o2 = e2.node;
  return (0, import_jsx_runtime.jsx)(T, { id: o2.serieId, value: "x: " + o2.formattedX + ", y: " + o2.formattedY, enableChip: true, color: o2.color });
}, markers: [], legends: [], annotations: [] };
var _ = A({}, $, { blendMode: "normal", layers: ["grid", "axes", "nodes", "markers", "mesh", "legends", "annotations"], role: "img", useMesh: true, animate: true, motionConfig: "default" });
var ee = A({}, $, { layers: ["grid", "axes", "nodes", "mesh", "legends", "annotations"], pixelRatio: "undefined" != typeof window && window.devicePixelRatio || 1, renderNode: function(e2, o2) {
  e2.beginPath(), e2.arc(o2.x, o2.y, o2.size / 2, 0, 2 * Math.PI), e2.fillStyle = o2.color, e2.fill();
} });
var oe = function(e2) {
  var o2 = e2.nodes, n2 = e2.annotations, i2 = Q(o2, n2);
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: i2.map(function(e3, o3) {
    return (0, import_jsx_runtime.jsx)(R, A({}, e3), o3);
  }) });
};
var ne = function(e2) {
  return e2.id;
};
var ie = function(e2) {
  return { x: e2.x, y: e2.y, size: e2.size, color: e2.color };
};
var te = function(e2) {
  return { x: e2.x, y: e2.y, size: 0, color: e2.color };
};
var re = function(e2) {
  var i2 = e2.nodes, t2 = e2.nodeComponent, r2 = e2.isInteractive, a2 = e2.onMouseEnter, d2 = e2.onMouseMove, l = e2.onMouseLeave, u = e2.onMouseDown, c = e2.onMouseUp, f = e2.onClick, h = e2.onDoubleClick, v = e2.tooltip, m = e2.blendMode, g = Dr(), p = g.animate, y = g.config, M2 = useTransition(i2, { keys: ne, from: ie, enter: ie, update: ie, leave: te, config: y, immediate: !p }), x = z(), b = x.showTooltipFromEvent, w = x.hideTooltip, S = (0, import_react.useCallback)(function(e3, o2) {
    b((0, import_react.createElement)(v, { node: e3 }), o2), null == a2 || a2(e3, o2);
  }, [v, b, a2]), k = (0, import_react.useCallback)(function(e3, o2) {
    b((0, import_react.createElement)(v, { node: e3 }), o2), null == d2 || d2(e3, o2);
  }, [v, b, d2]), z2 = (0, import_react.useCallback)(function(e3, o2) {
    w(), null == l || l(e3, o2);
  }, [w, l]), I = (0, import_react.useCallback)(function(e3, o2) {
    return null == u ? void 0 : u(e3, o2);
  }, [u]), C = (0, import_react.useCallback)(function(e3, o2) {
    return null == c ? void 0 : c(e3, o2);
  }, [c]), D = (0, import_react.useCallback)(function(e3, o2) {
    return null == f ? void 0 : f(e3, o2);
  }, [f]), E3 = (0, import_react.useCallback)(function(e3, o2) {
    return null == h ? void 0 : h(e3, o2);
  }, [h]);
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: M2(function(e3, o2) {
    return (0, import_react.createElement)(t2, { node: o2, style: e3, blendMode: m, isInteractive: r2, onMouseEnter: r2 ? S : void 0, onMouseMove: r2 ? k : void 0, onMouseLeave: r2 ? z2 : void 0, onMouseDown: r2 ? I : void 0, onMouseUp: r2 ? C : void 0, onClick: r2 ? D : void 0, onDoubleClick: r2 ? E3 : void 0 });
  }) });
};
var ae = function(e2) {
  var i2 = e2.nodes, t2 = e2.width, r2 = e2.height, a2 = e2.onMouseEnter, d2 = e2.onMouseMove, l = e2.onMouseLeave, u = e2.onMouseDown, s = e2.onMouseUp, c = e2.onClick, f = e2.onDoubleClick, h = e2.tooltip, v = e2.debug, m = z(), g = m.showTooltipFromEvent, p = m.hideTooltip, y = (0, import_react.useCallback)(function(e3, o2) {
    g((0, import_react.createElement)(h, { node: e3 }), o2), null == a2 || a2(e3, o2);
  }, [g, h, a2]), M2 = (0, import_react.useCallback)(function(e3, o2) {
    g((0, import_react.createElement)(h, { node: e3 }), o2), null == d2 || d2(e3, o2);
  }, [g, h, d2]), x = (0, import_react.useCallback)(function(e3, o2) {
    p(), null == l || l(e3, o2);
  }, [p, l]), b = (0, import_react.useCallback)(function(e3, o2) {
    null == u || u(e3, o2);
  }, [u]), w = (0, import_react.useCallback)(function(e3, o2) {
    null == s || s(e3, o2);
  }, [s]), S = (0, import_react.useCallback)(function(e3, o2) {
    null == c || c(e3, o2);
  }, [c]), k = (0, import_react.useCallback)(function(e3, o2) {
    null == f || f(e3, o2);
  }, [f]);
  return (0, import_jsx_runtime.jsx)(j2, { nodes: i2, width: t2, height: r2, onMouseEnter: y, onMouseMove: M2, onMouseLeave: x, onMouseDown: b, onMouseUp: w, onClick: S, onDoubleClick: k, debug: v });
};
var de = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var le = function(o2) {
  var i2 = o2.data, r2 = o2.xScale, a2 = void 0 === r2 ? _.xScale : r2, d2 = o2.xFormat, l = o2.yScale, u = void 0 === l ? _.yScale : l, s = o2.yFormat, c = o2.width, m = o2.height, g = o2.margin, p = o2.layers, y = void 0 === p ? _.layers : p, b = o2.colors, w = void 0 === b ? _.colors : b, k = o2.blendMode, z2 = void 0 === k ? _.blendMode : k, I = o2.nodeId, C = void 0 === I ? _.nodeId : I, D = o2.nodeSize, E3 = void 0 === D ? _.nodeSize : D, R3 = o2.nodeComponent, W3 = void 0 === R3 ? _.nodeComponent : R3, L3 = o2.enableGridX, H2 = void 0 === L3 ? _.enableGridX : L3, F2 = o2.enableGridY, U = void 0 === F2 ? _.enableGridY : F2, X = o2.gridXValues, B2 = o2.gridYValues, G = o2.axisTop, j3 = o2.axisRight, T2 = o2.axisBottom, V2 = void 0 === T2 ? _.axisBottom : T2, P = o2.axisLeft, N = void 0 === P ? _.axisLeft : P, O2 = o2.annotations, q4 = void 0 === O2 ? _.annotations : O2, J3 = o2.isInteractive, Q2 = void 0 === J3 ? _.isInteractive : J3, Z2 = o2.useMesh, $2 = void 0 === Z2 ? _.useMesh : Z2, ee2 = o2.debugMesh, ne2 = void 0 === ee2 ? _.debugMesh : ee2, ie2 = o2.onMouseEnter, te2 = o2.onMouseMove, de2 = o2.onMouseLeave, le2 = o2.onMouseDown, ue2 = o2.onMouseUp, se2 = o2.onClick, ce2 = o2.onDoubleClick, fe2 = o2.tooltip, he2 = void 0 === fe2 ? _.tooltip : fe2, ve2 = o2.markers, me2 = void 0 === ve2 ? _.markers : ve2, ge2 = o2.legends, pe = void 0 === ge2 ? _.legends : ge2, ye = o2.role, Me = void 0 === ye ? _.role : ye, xe = o2.ariaLabel, be = o2.ariaLabelledBy, we = o2.ariaDescribedBy, Se = o2.forwardedRef, ke = cn(c, m, g), ze = ke.margin, Ie = ke.innerWidth, Ce = ke.innerHeight, De = ke.outerWidth, Ee = ke.outerHeight, Re = K({ data: i2, xScaleSpec: a2, xFormat: d2, yScaleSpec: u, yFormat: s, width: Ie, height: Ce, nodeId: C, nodeSize: E3, colors: w }), We = Re.xScale, Le = Re.yScale, He = Re.nodes, Fe = Re.legendData, Ue = (0, import_react.useMemo)(function() {
    return { xScale: We, yScale: Le, nodes: He, margin: ze, innerWidth: Ie, innerHeight: Ce, outerWidth: De, outerHeight: Ee };
  }, [We, Le, He, ze, Ie, Ce, De, Ee]), Xe = { grid: null, axes: null, nodes: null, markers: null, mesh: null, annotations: null, legends: null };
  return y.includes("grid") && (Xe.grid = (0, import_jsx_runtime.jsx)(j, { width: Ie, height: Ce, xScale: H2 ? We : null, yScale: U ? Le : null, xValues: X, yValues: B2 }, "grid")), y.includes("axes") && (Xe.axes = (0, import_jsx_runtime.jsx)(V, { xScale: We, yScale: Le, width: Ie, height: Ce, top: G, right: j3, bottom: V2, left: N }, "axes")), y.includes("nodes") && (Xe.nodes = (0, import_jsx_runtime.jsx)(re, { nodes: He, nodeComponent: W3, isInteractive: Q2, tooltip: he2, blendMode: z2, onMouseEnter: ie2, onMouseMove: te2, onMouseLeave: de2, onMouseDown: le2, onMouseUp: ue2, onClick: se2, onDoubleClick: ce2 }, "nodes")), y.includes("markers") && (Xe.markers = (0, import_jsx_runtime.jsx)(Pt, { markers: me2, width: Ie, height: Ce, xScale: We, yScale: Le }, "markers")), y.includes("mesh") && Q2 && $2 && (Xe.mesh = (0, import_jsx_runtime.jsx)(ae, { nodes: He, width: Ie, height: Ce, onMouseEnter: ie2, onMouseMove: te2, onMouseLeave: de2, onMouseDown: le2, onMouseUp: ue2, onClick: se2, onDoubleClick: ce2, tooltip: he2, debug: ne2 }, "mesh")), y.includes("annotations") && (Xe.annotations = (0, import_jsx_runtime.jsx)(oe, { nodes: He, annotations: q4 }, "annotations")), y.includes("legends") && (Xe.legends = pe.map(function(e2, o3) {
    return (0, import_jsx_runtime.jsx)(E, A({}, e2, { containerWidth: Ie, containerHeight: Ce, data: Fe }), o3);
  })), (0, import_jsx_runtime.jsx)(Rt, { width: De, height: Ee, margin: ze, role: Me, ariaLabel: xe, ariaLabelledBy: be, ariaDescribedBy: we, ref: Se, children: y.map(function(e2, o3) {
    if ("string" == typeof e2 && void 0 !== Xe[e2]) return Xe[e2];
    if ("function" == typeof e2) return (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e2, Ue) }, o3);
    throw new Error("Unknown layer (" + e2 + ")");
  }) });
};
var ue = (0, import_react.forwardRef)(function(e2, o2) {
  var n2 = e2.isInteractive, i2 = void 0 === n2 ? _.isInteractive : n2, t2 = e2.animate, r2 = void 0 === t2 ? _.animate : t2, a2 = e2.motionConfig, d2 = void 0 === a2 ? _.motionConfig : a2, l = e2.theme, u = e2.renderWrapper, s = q3(e2, de);
  return (0, import_jsx_runtime.jsx)(Fr, { animate: r2, isInteractive: i2, motionConfig: d2, renderWrapper: u, theme: l, children: (0, import_jsx_runtime.jsx)(le, A({}, s, { isInteractive: i2, forwardedRef: o2 })) });
});
var se = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var ce = (0, import_react.forwardRef)(function(e2, o2) {
  var n2 = e2.defaultWidth, i2 = e2.defaultHeight, t2 = e2.onResize, r2 = e2.debounceResize, a2 = q3(e2, se);
  return (0, import_jsx_runtime.jsx)($r, { defaultWidth: n2, defaultHeight: i2, onResize: t2, debounceResize: r2, children: function(e3) {
    var n3 = e3.width, i3 = e3.height;
    return (0, import_jsx_runtime.jsx)(ue, A({}, a2, { width: n3, height: i3, ref: o2 }));
  } });
});
var fe = ["isInteractive", "renderWrapper", "theme"];
var he = function(i2) {
  var t2 = i2.data, l = i2.xScale, u = void 0 === l ? ee.xScale : l, s = i2.xFormat, c = i2.yScale, h = void 0 === c ? ee.yScale : c, v = i2.yFormat, m = i2.width, M2 = i2.height, x = i2.margin, S = i2.pixelRatio, z2 = void 0 === S ? ee.pixelRatio : S, I = i2.layers, C = void 0 === I ? ee.layers : I, D = i2.colors, R3 = void 0 === D ? ee.colors : D, W3 = i2.nodeId, L3 = void 0 === W3 ? _.nodeId : W3, H2 = i2.nodeSize, F2 = void 0 === H2 ? ee.nodeSize : H2, U = i2.renderNode, X = void 0 === U ? ee.renderNode : U, B2 = i2.enableGridX, G = void 0 === B2 ? ee.enableGridX : B2, T2 = i2.gridXValues, q4 = i2.enableGridY, J3 = void 0 === q4 ? ee.enableGridY : q4, Z2 = i2.gridYValues, $2 = i2.axisTop, oe2 = i2.axisRight, ne2 = i2.axisBottom, ie2 = void 0 === ne2 ? ee.axisBottom : ne2, te2 = i2.axisLeft, re2 = void 0 === te2 ? ee.axisLeft : te2, ae2 = i2.annotations, de2 = void 0 === ae2 ? ee.annotations : ae2, le2 = i2.isInteractive, ue2 = void 0 === le2 ? ee.isInteractive : le2, se2 = i2.debugMesh, ce2 = void 0 === se2 ? ee.debugMesh : se2, fe2 = i2.onMouseEnter, he2 = i2.onMouseMove, ve2 = i2.onMouseLeave, me2 = i2.onMouseDown, ge2 = i2.onMouseUp, pe = i2.onClick, ye = i2.onDoubleClick, Me = i2.tooltip, xe = void 0 === Me ? ee.tooltip : Me, be = i2.legends, we = void 0 === be ? ee.legends : be, Se = i2.role, ke = i2.forwardedRef, ze = (0, import_react.useRef)(null), Ie = M(), Ce = (0, import_react.useState)(null), De = Ce[0], Ee = Ce[1], Re = cn(m, M2, x), We = Re.margin, Le = Re.innerWidth, He = Re.innerHeight, Fe = Re.outerWidth, Ue = Re.outerHeight, Xe = K({ data: t2, xScaleSpec: u, xFormat: s, yScaleSpec: h, yFormat: v, width: Le, height: He, nodeId: L3, nodeSize: F2, colors: R3 }), Ye = Xe.xScale, Be = Xe.yScale, Ge = Xe.nodes, je = Xe.legendData, Te = Q(Ge, de2), Ve = E2({ points: Ge, width: Le, height: He, debug: ce2 }), Pe = Ve.delaunay, Ne = Ve.voronoi, Oe = (0, import_react.useMemo)(function() {
    return { xScale: Ye, yScale: Be, nodes: Ge, margin: We, innerWidth: Le, innerHeight: He, outerWidth: Fe, outerHeight: Ue };
  }, [Ye, Be, Ge, We, Le, He, Fe, Ue]);
  (0, import_react.useEffect)(function() {
    if (ze.current) {
      ze.current.width = Fe * z2, ze.current.height = Ue * z2;
      var e2 = ze.current.getContext("2d");
      e2.scale(z2, z2), e2.fillStyle = Ie.background, e2.fillRect(0, 0, Fe, Ue), e2.translate(We.left, We.top), C.forEach(function(o2) {
        if ("grid" === o2) e2.lineWidth = Ie.grid.line.strokeWidth, e2.strokeStyle = Ie.grid.line.stroke, G && q(e2, { width: Le, height: He, scale: Ye, axis: "x", values: T2 }), J3 && q(e2, { width: Le, height: He, scale: Be, axis: "y", values: Z2 });
        else if ("annotations" === o2) J(e2, { annotations: Te, theme: Ie });
        else if ("axes" === o2) W(e2, { xScale: Ye, yScale: Be, width: Le, height: He, top: $2, right: oe2, bottom: ie2, left: re2, theme: Ie });
        else if ("nodes" === o2) Ge.forEach(function(o3) {
          X(e2, o3);
        });
        else if ("mesh" === o2) ce2 && (F(e2, Ne), De && q2(e2, Ne, De.index));
        else if ("legends" === o2) we.forEach(function(o3) {
          L(e2, A({}, o3, { data: je, containerWidth: Le, containerHeight: He, theme: Ie }));
        });
        else {
          if ("function" != typeof o2) throw new Error("Invalid layer: " + o2);
          o2(e2, Oe);
        }
      });
    }
  }, [ze, Le, He, Fe, Ue, We.top, We.left, z2, X, C, Oe, Ie, Ye, Be, Ge, G, T2, J3, Z2, $2, oe2, ie2, re2, we, je, ce2, Ne, De, Te]);
  var Ae = z(), qe = Ae.showTooltipFromEvent, Je = Ae.hideTooltip, Ke = (0, import_react.useCallback)(function(e2) {
    var o2 = kn(ze.current, e2), n2 = o2[0], i3 = o2[1];
    if (!wn(We.left, We.top, Le, He, n2, i3)) return null;
    var t3 = Pe.find(n2 - We.left, i3 - We.top);
    return Ge[t3];
  }, [ze, We, Le, He, Pe, Ge]), Qe = (0, import_react.useCallback)(function(e2) {
    var o2 = Ke(e2);
    Ee(o2), o2 ? (qe((0, import_react.createElement)(xe, { node: o2 }), e2), De && De.id !== o2.id && (null == ve2 || ve2(De, e2), null == fe2 || fe2(o2, e2)), De || null == fe2 || fe2(o2, e2), null == he2 || he2(o2, e2)) : (Je(), De && (null == ve2 || ve2(De, e2)));
  }, [Ke, De, Ee, qe, Je, xe, fe2, he2, ve2]), Ze = (0, import_react.useCallback)(function(e2) {
    Je(), Ee(null), De && (null == ve2 || ve2(De, e2));
  }, [Je, De, Ee, ve2]), $e = (0, import_react.useCallback)(function(e2) {
    if (me2) {
      var o2 = Ke(e2);
      o2 && me2(o2, e2);
    }
  }, [Ke, me2]), _e = (0, import_react.useCallback)(function(e2) {
    if (ge2) {
      var o2 = Ke(e2);
      o2 && ge2(o2, e2);
    }
  }, [Ke, ge2]), eo = (0, import_react.useCallback)(function(e2) {
    if (pe) {
      var o2 = Ke(e2);
      o2 && pe(o2, e2);
    }
  }, [Ke, pe]), oo = (0, import_react.useCallback)(function(e2) {
    if (ye) {
      var o2 = Ke(e2);
      o2 && ye(o2, e2);
    }
  }, [Ke, ye]);
  return (0, import_jsx_runtime.jsx)("canvas", { ref: Rn(ze, ke), width: Fe * z2, height: Ue * z2, style: { width: Fe, height: Ue, cursor: ue2 ? "auto" : "normal" }, onMouseEnter: ue2 ? Qe : void 0, onMouseMove: ue2 ? Qe : void 0, onMouseLeave: ue2 ? Ze : void 0, onMouseDown: ue2 ? $e : void 0, onMouseUp: ue2 ? _e : void 0, onClick: ue2 ? eo : void 0, onDoubleClick: ue2 ? oo : void 0, role: Se });
};
var ve = (0, import_react.forwardRef)(function(e2, o2) {
  var n2 = e2.isInteractive, i2 = e2.renderWrapper, t2 = e2.theme, r2 = q3(e2, fe);
  return (0, import_jsx_runtime.jsx)(Fr, { isInteractive: n2, renderWrapper: i2, theme: t2, animate: false, children: (0, import_jsx_runtime.jsx)(he, A({}, r2, { isInteractive: n2, forwardedRef: o2 })) });
});
var me = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var ge = (0, import_react.forwardRef)(function(e2, o2) {
  var n2 = e2.defaultWidth, i2 = e2.defaultHeight, t2 = e2.onResize, r2 = e2.debounceResize, a2 = q3(e2, me);
  return (0, import_jsx_runtime.jsx)($r, { defaultWidth: n2, defaultHeight: i2, onResize: t2, debounceResize: r2, children: function(e3) {
    var n3 = e3.width, i3 = e3.height;
    return (0, import_jsx_runtime.jsx)(ve, A({}, a2, { width: n3, height: i3, ref: o2 }));
  } });
});
export {
  ce as ResponsiveScatterPlot,
  ge as ResponsiveScatterPlotCanvas,
  ue as ScatterPlot,
  ve as ScatterPlotCanvas,
  ee as canvasDefaultProps,
  $ as commonDefaultProps,
  _ as svgDefaultProps,
  K as useScatterPlot,
  Q as useScatterPlotAnnotations
};
//# sourceMappingURL=@nivo_scatterplot.js.map
