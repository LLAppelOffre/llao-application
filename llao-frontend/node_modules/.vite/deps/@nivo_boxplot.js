import {
  O,
  R
} from "./chunk-NOKX7PNT.js";
import {
  V,
  j,
  pn,
  require_sortBy,
  require_uniqBy
} from "./chunk-KLR4ML3O.js";
import {
  $r,
  AnimatedObject,
  Dr,
  E2 as E,
  FluidValue,
  Fr,
  M,
  Mn,
  Pt,
  Rt,
  Ye,
  addFluidObserver,
  bn,
  callFluidObservers,
  cn,
  colors2,
  createHost,
  createStringInterpolator2,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  gn,
  hasFluidValue,
  hn,
  hr,
  is,
  removeFluidObserver,
  toArray,
  useTransition,
  w2 as w,
  z
} from "./chunk-FQLOU77L.js";
import {
  require_jsx_runtime
} from "./chunk-OT5EQO2H.js";
import {
  require_react_dom
} from "./chunk-WRD5HZVH.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@nivo/boxplot/dist/nivo-boxplot.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/@nivo/boxplot/node_modules/@react-spring/web/dist/react-spring_web.modern.mjs
var import_react_dom = __toESM(require_react_dom(), 1);
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "") return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox,
    ...attributes
  } = props;
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(
    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (n2) => "-" + n2.toLowerCase()
    ))
  );
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i2) => {
    instance.setAttribute(name, values[i2]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor({ x, y, z: z3, ...style }) {
    const inputs = [];
    const transforms = [];
    if (x || y || z3) {
      inputs.push([x || 0, y || 0, z3 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        // prettier-ignore
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value)) return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(
          key === "rotate3d" ? ([x2, y2, z22, deg]) => [
            `rotate3d(${x2},${y2},${z22},${addUnit(deg, unit)})`,
            isValueIdentity(deg, 0)
          ] : (input) => [
            `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
            isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i2) => {
      const arg1 = getFluidValue(input[0]);
      const [t2, id] = this.transforms[i2](
        is.arr(arg1) ? arg1 : input.map(getFluidValue)
      );
      transform += " " + t2;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(count) {
    if (count == 1)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && addFluidObserver(value, this)
        )
      );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(count) {
    if (count == 0)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && removeFluidObserver(value, this)
        )
      );
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props
});
var animated = host.animated;

// node_modules/@nivo/boxplot/dist/nivo-boxplot.mjs
var import_uniqBy = __toESM(require_uniqBy(), 1);
var import_sortBy = __toESM(require_sortBy(), 1);
function R2() {
  return R2 = Object.assign ? Object.assign.bind() : function(e2) {
    for (var o2 = 1; o2 < arguments.length; o2++) {
      var i2 = arguments[o2];
      for (var r2 in i2) ({}).hasOwnProperty.call(i2, r2) && (e2[r2] = i2[r2]);
    }
    return e2;
  }, R2.apply(null, arguments);
}
function q(e2, o2) {
  if (null == e2) return {};
  var i2 = {};
  for (var r2 in e2) if ({}.hasOwnProperty.call(e2, r2)) {
    if (-1 !== o2.indexOf(r2)) continue;
    i2[r2] = e2[r2];
  }
  return i2;
}
var z2 = function(e2) {
  return { x: e2.x + e2.width / 2, y: e2.y + e2.height / 2 };
};
var F = function(e2) {
  var o2 = e2.width, i2 = e2.height;
  return { width: o2, height: i2, size: Math.max(o2, i2) };
};
var O2 = function(e2) {
  var o2 = e2.boxPlots, i2 = e2.annotations, r2 = O({ data: o2, annotations: i2, getPosition: z2, getDimensions: F });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: r2.map(function(e3, o3) {
    return (0, import_jsx_runtime.jsx)(R, R2({}, e3), o3);
  }) });
};
var T = function(e2) {
  var o2 = e2.width, i2 = e2.height, r2 = e2.legends;
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: r2.map(function(e3, r3) {
    var n2, t2 = e3[0], a2 = e3[1];
    return (0, import_jsx_runtime.jsx)(E, R2({}, t2, { containerWidth: o2, containerHeight: i2, data: null != (n2 = t2.data) ? n2 : a2 }), r3);
  }) });
};
var A = function(e2) {
  var o2 = e2.distStart, i2 = e2.distEnd, r2 = e2.whiskerEndSize, n2 = e2.whiskerColor, t2 = e2.whiskerWidth;
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(animated.line, { x1: 0, x2: 0, y1: o2, y2: i2, strokeWidth: t2, stroke: n2 }), r2 > 0 ? (0, import_jsx_runtime.jsx)(animated.line, { x1: -r2, x2: r2, y1: i2, y2: i2, strokeWidth: t2, stroke: n2 }) : null] });
};
var H = function(r2) {
  var n2, t2 = r2.boxPlot, a2 = r2.layout, l = r2.animatedProps, u = l.borderColor, d = l.medianColor, s = l.whiskerColor, c = l.color, v = l.opacity, p = l.transform, m = l.valueInterval, h = l.valueDistance0, g = l.valueDistance1, f = l.valueDistance3, b = l.valueDistance4, y = r2.borderRadius, x = r2.borderWidth, w3 = r2.medianWidth, C = r2.whiskerWidth, P = r2.whiskerEndSize, L = r2.isInteractive, W = r2.onClick, I = r2.onMouseEnter, M2 = r2.onMouseLeave, V2 = r2.setActiveItem, D2 = r2.tooltip, E3 = r2.isFocusable, R3 = r2.ariaLabel, q2 = r2.ariaLabelledBy, z3 = r2.ariaDescribedBy, F2 = z(), O3 = F2.showTooltipFromEvent, T2 = F2.hideTooltip, H2 = "vertical" === a2, j3 = H2 ? t2.width : t2.height, X2 = (0, import_react.useMemo)(function() {
    return function() {
      return (0, import_react.createElement)(D2, t2);
    };
  }, [D2, t2]), Y2 = (0, import_react.useCallback)(function(e2) {
    null == W || W(t2, e2);
  }, [t2, W]), N2 = (0, import_react.useCallback)(function(e2) {
    return O3(X2(), e2);
  }, [O3, X2]), Q2 = (0, import_react.useCallback)(function(e2) {
    null == I || I(t2, e2), O3(X2(), e2), V2(t2);
  }, [t2, I, O3, X2, V2]), K2 = (0, import_react.useCallback)(function(e2) {
    null == M2 || M2(t2, e2), T2(), V2(null);
  }, [t2, T2, M2, V2]), J2 = (0, import_react.useCallback)(function() {
    T2();
  }, [T2]);
  return (0, import_jsx_runtime.jsxs)(animated.g, { "data-key": "boxplot." + t2.key, transform: p, opacity: v, onMouseEnter: L ? Q2 : void 0, onMouseMove: L ? N2 : void 0, onMouseLeave: L ? K2 : void 0, onClick: L ? Y2 : void 0, onBlur: L && E3 ? J2 : void 0, focusable: E3, tabIndex: E3 ? 0 : void 0, "aria-label": R3 ? R3(t2) : void 0, "aria-labelledby": q2 ? q2(t2) : void 0, "aria-describedby": z3 ? z3(t2) : void 0, children: [(0, import_jsx_runtime.jsx)(animated.rect, { x: -j3 / 2, y: H2 ? f : g, width: j3, height: m, rx: y, ry: y, fill: null != (n2 = t2.fill) ? n2 : c, strokeWidth: x, stroke: u }), (0, import_jsx_runtime.jsx)(animated.line, { x1: -j3 / 2, x2: j3 / 2, y1: 0, y2: 0, strokeWidth: w3, stroke: d }), (0, import_jsx_runtime.jsx)(A, { distStart: g, distEnd: h, whiskerEndSize: P * j3 / 2, whiskerColor: s, whiskerWidth: C }), (0, import_jsx_runtime.jsx)(A, { distStart: f, distEnd: b, whiskerEndSize: P * j3 / 2, whiskerColor: s, whiskerWidth: C })] });
};
var j2 = { n: "n", mean: "mean", min: "min", max: "max", Summary: "Summary", Quantiles: "Quantiles" };
var X = (0, import_react.memo)(function(e2) {
  var o2 = e2.label, i2 = e2.formatted, r2 = e2.enableChip, n2 = void 0 !== r2 && r2, t2 = e2.color, a2 = M(), l = j2;
  (function(e3) {
    return "translation" in e3;
  })(a2) && (l = R2({}, j2, a2.translation));
  var u = i2.quantiles.map(function(e3, o3) {
    return (0, import_jsx_runtime.jsxs)("div", { children: [e3, "%: ", (0, import_jsx_runtime.jsx)("strong", { children: i2.values[o3] })] }, "quantile." + o3);
  });
  return (0, import_jsx_runtime.jsxs)("div", { style: a2.tooltip.container, children: [(0, import_jsx_runtime.jsxs)("div", { style: a2.tooltip.basic, children: [n2 && (0, import_jsx_runtime.jsx)(w, { color: null != t2 ? t2 : "", style: a2.tooltip.chip }), o2] }), (0, import_jsx_runtime.jsxs)("div", { style: { display: "flex", marginTop: "1rem" }, children: [(0, import_jsx_runtime.jsxs)("div", { style: { marginRight: "2rem" }, children: [(0, import_jsx_runtime.jsxs)("div", { children: [l.n, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.n })] }), (0, import_jsx_runtime.jsx)("div", { style: { marginTop: "1rem" }, children: l.Summary }), (0, import_jsx_runtime.jsxs)("div", { children: [l.mean, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.mean })] }), (0, import_jsx_runtime.jsxs)("div", { children: [l.min, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.extrema[0] })] }), (0, import_jsx_runtime.jsxs)("div", { children: [l.max, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.extrema[1] })] })] }), (0, import_jsx_runtime.jsxs)("div", { children: [(0, import_jsx_runtime.jsx)("div", { children: l.Quantiles }), u] })] })] });
});
var Y = { value: "value", groupBy: "group", groups: null, subGroupBy: null, subGroups: null, quantiles: [0.1, 0.25, 0.5, 0.75, 0.9], layout: "vertical", minValue: "auto", maxValue: "auto", valueScale: { type: "linear" }, indexScale: { type: "band", round: true }, padding: 0.1, innerPadding: 6, opacity: 1, activeOpacity: 1, inactiveOpacity: 0.25, axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, enableGridX: false, enableGridY: true, valueFormat: function(e2) {
  return e2.toPrecision(4);
}, colorBy: "subGroup", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, medianWidth: 2, medianColor: { from: "color", modifiers: [["darker", 2]] }, whiskerWidth: 2, whiskerColor: { from: "color" }, whiskerEndSize: 0.6, isInteractive: true, tooltip: function(e2) {
  var o2 = e2.color, i2 = e2.label, r2 = e2.formatted;
  return (0, import_jsx_runtime.jsx)(X, { label: i2, formatted: r2, enableChip: true, color: o2 });
}, tooltipLabel: function(e2) {
  return e2.subGroup ? e2.group + " - " + e2.subGroup : e2.group;
}, legends: [], annotations: [], markers: [] };
var N = R2({}, Y, { layers: ["grid", "axes", "boxPlots", "markers", "legends", "annotations"], boxPlotComponent: H, defs: [], fill: [], animate: true, motionConfig: "default", role: "img", isFocusable: false });
var Q = function(e2) {
  var o2 = e2.data, i2 = e2.layout, r2 = e2.groups, n2 = e2.subGroups, t2 = e2.formatValue, a2 = e2.minValue, l = e2.maxValue, u = e2.width, d = e2.height, s = e2.padding, c = e2.innerPadding, v = e2.valueScale, p = e2.indexScale, m = e2.getTooltipLabel, h = "vertical" === i2 ? ["y", "x", u] : ["x", "y", d], g = h[0], f = function(e3, o3, i3, r3, n3) {
    return pn(i3, { all: e3, min: 0, max: 0 }, r3, n3).padding(o3);
  }(null != r2 ? r2 : [], s, p, h[2], h[1]), b = R2({ max: l, min: a2 }, v), y = o2.map(function(e3) {
    return e3.values;
  }).flat(), x = y.reduce(function(e3, o3) {
    return Math.min(e3, o3);
  }, 1 / 0), k2 = y.reduce(function(e3, o3) {
    return Math.max(e3, o3);
  }, -1 / 0), w3 = pn(b, { all: [x, k2], min: x, max: k2 }, "x" === g ? u : d, g), S2 = "vertical" === i2 ? [f, w3] : [w3, f], C = S2[0], G = S2[1], P = Math.max(1, n2 ? n2.length : 1), B = (f.bandwidth() - c * (P - 1)) / P, L = function(e3) {
    var o3 = e3.data, i3 = e3.getTooltipLabel, r3 = e3.innerPadding, n3 = void 0 === r3 ? 0 : r3, t3 = e3.groups, a3 = e3.indexScale, l2 = e3.valueScale, u2 = e3.formatValue, d2 = e3.bandwidth, s2 = e3.layout;
    if (0 === d2) return Array();
    var c2 = "vertical" === s2;
    return o3.map(function(e4) {
      var o4, r4, v2, p2 = e4.group, m2 = e4.subGroup, h2 = e4.groupIndex, g2 = e4.subGroupIndex, f2 = e4.values, b2 = (null != (o4 = a3(t3[h2])) ? o4 : 0) + d2 * g2 + n3 * g2, y2 = h2 + "." + g2, x2 = f2.map(l2).map(function(e5) {
        return null != e5 ? e5 : 0;
      }), k3 = [0, 1, 2, 3].map(function(e5) {
        var o5;
        return null != (o5 = Math.abs(x2[e5 + 1] - x2[e5])) ? o5 : 0;
      }), w4 = c2 ? { x: b2, y: null != (r4 = l2(e4.values[3])) ? r4 : 0, width: d2, height: k3[1] + k3[2] } : { x: null != (v2 = l2(e4.values[1])) ? v2 : 0, y: b2, width: k3[1] + k3[2], height: d2 };
      return R2({ key: y2, group: p2, subGroup: m2, data: e4, formatted: { n: String(e4.n), mean: u2(e4.mean), extrema: e4.extrema.map(u2), values: e4.values.map(u2), quantiles: e4.quantiles.map(function(e5) {
        return String(100 * e5);
      }) } }, w4, { coordinates: { index: b2, values: f2.map(function(e5) {
        var o5;
        return null != (o5 = l2(e5)) ? o5 : 0;
      }) }, bandwidth: d2, label: i3(e4), layout: s2 });
    });
  }({ data: o2, groups: r2, subGroups: n2, getTooltipLabel: m, innerPadding: c, indexScale: f, valueScale: w3, formatValue: t2, bandwidth: B, layout: i2 });
  return { xScale: C, yScale: G, boxPlots: L };
};
var K = function(e2) {
  return e2.reduce(function(e3, o2) {
    return e3 + o2;
  }, 0) / e2.length;
};
var J = function(e2) {
  var o2, i2 = e2.data, r2 = e2.getValue, n2 = e2.groups, t2 = e2.subGroups, a2 = e2.groupIndex, l = e2.subGroupIndex, u = e2.quantiles;
  if (1 === i2.length && (o2 = i2[0], ["values", "extrema", "mean", "quantiles", "group", "subGroup", "n"].every(function(e3) {
    return e3 in o2;
  }))) return R2({ groupIndex: a2, subGroupIndex: l }, i2[0]);
  var d = i2.map(function(e3) {
    return Number(r2(e3));
  });
  return d.sort(function(e3, o3) {
    return e3 - o3;
  }), { group: n2 ? n2[a2] : "", groupIndex: a2, subGroup: t2 ? t2[l] : "", subGroupIndex: l, n: d.length, extrema: [d[0], d[d.length - 1]], quantiles: u, values: u.map(function(e3) {
    return function(e4, o3) {
      void 0 === o3 && (o3 = 0.5);
      var i3 = (e4.length - 1) * Math.max(0, Math.min(1, o3)), r3 = Math.floor(i3);
      if (i3 === r3) return e4[r3];
      var n3 = e4[r3];
      return n3 + (e4[r3 + 1] - n3) * (i3 - r3);
    }(d, e3);
  }), mean: K(d) };
};
var U = function(e2, o2, i2) {
  var r2 = bn(null != i2 ? i2 : "id");
  if (e2) return e2;
  if (!i2) return null;
  var n2 = new Set(o2.map(function(e3) {
    return r2(e3);
  }));
  return Array.from(n2);
};
var Z = function(o2) {
  var i2 = o2.data, r2 = o2.value, t2 = o2.groupBy, a2 = o2.groups, l = void 0 === a2 ? Y.groups : a2, u = o2.subGroupBy, v = void 0 === u ? Y.subGroupBy : u, p = o2.subGroups, m = void 0 === p ? Y.subGroups : p, h = o2.quantiles, g = void 0 === h ? Y.quantiles : h, f = o2.width, b = o2.height, y = o2.layout, x = o2.minValue, k2 = o2.maxValue, w3 = o2.valueScale, S2 = void 0 === w3 ? Y.valueScale : w3, C = o2.indexScale, G = void 0 === C ? Y.indexScale : C, P = o2.padding, B = void 0 === P ? Y.padding : P, L = o2.innerPadding, V2 = void 0 === L ? Y.innerPadding : L, q2 = o2.colorBy, z3 = void 0 === q2 ? Y.colorBy : q2, F2 = o2.colors, O3 = void 0 === F2 ? Y.colors : F2, T2 = o2.opacity, A2 = o2.activeOpacity, H2 = o2.inactiveOpacity, j3 = o2.borderColor, X2 = o2.medianColor, N2 = o2.whiskerColor, K2 = o2.legendLabel, Z2 = o2.tooltipLabel, $2 = o2.valueFormat, _2 = void 0 === $2 ? Y.valueFormat : $2, ee2 = o2.legends, oe2 = void 0 === ee2 ? Y.legends : ee2;
  l = U(l, i2, t2), m = U(m, i2, v);
  var ie2 = bn(null != t2 ? t2 : "group"), re = bn(null != v ? v : "subGroup"), ne = bn(Z2), te = bn(r2), ae = hn(_2), le = M(), ue = hr(O3, z3);
  l && "group" === z3 && l.map(function(e2) {
    return ue({ group: e2 });
  }), m && "subGroup" === z3 && m.map(function(e2) {
    return ue({ subGroup: e2 });
  });
  var de = Ye(j3, le), se = Ye(X2, le), ce = Ye(N2, le), ve = function(e2) {
    var o3 = e2.data, i3 = e2.groups, r3 = void 0 === i3 ? Y.groups : i3, n2 = e2.getGroup, t3 = e2.subGroups, a3 = void 0 === t3 ? Y.subGroups : t3, l2 = e2.getSubGroup, u2 = {};
    r3 && r3.map(function(e3, o4) {
      return u2[e3] = o4;
    });
    var d = {};
    a3 && a3.map(function(e3, o4) {
      return d[e3] = o4;
    });
    var s = Math.max(1, r3 ? r3.length : 1), c = Math.max(1, a3 ? a3.length : 1), v2 = Array(s * c).fill([]).map(function() {
      return Array();
    });
    return o3.forEach(function(e3) {
      var o4, i4 = n2 ? Number(u2[n2(e3)]) : 0, r4 = l2 ? Number(null != (o4 = d[l2(e3)]) ? o4 : 0) : 0, t4 = i4 * c + r4;
      t4 >= 0 && v2[t4].push(e3);
    }), v2;
  }({ data: i2, groups: l, getGroup: ie2, subGroups: m, getSubGroup: re }), pe = Math.max(1, m ? m.length : 1), me = (0, import_react.useMemo)(function() {
    return ve.map(function(e2, o3) {
      return J({ data: e2, getValue: te, groups: l, subGroups: m, groupIndex: Math.floor(o3 / pe), subGroupIndex: o3 % pe, quantiles: g });
    });
  }, [ve, te, l, m, pe, g]), he = (0, import_react.useMemo)(function() {
    return Q({ layout: y, data: me.filter(function(e2) {
      return e2.n > 0;
    }), groups: l, subGroups: m, formatValue: ae, minValue: x, maxValue: k2, width: f, height: b, padding: B, innerPadding: V2, valueScale: S2, indexScale: G, getTooltipLabel: ne });
  }, [y, me, l, m, ae, x, k2, f, b, B, V2, S2, G, ne]), ge = he.boxPlots, fe = he.xScale, be = he.yScale, ye = (0, import_react.useState)(null), xe = ye[0], ke = ye[1], we = (0, import_react.useMemo)(function() {
    if (!xe) return [];
    var e2 = xe.group, o3 = xe.subGroup;
    return ge.filter(function(i3) {
      return e2 === i3.group || o3 === i3.subGroup;
    }).map(function(e3) {
      return e3.key;
    });
  }, [ge, xe]), Se = (0, import_react.useMemo)(function() {
    return ge.map(function(e2) {
      var o3 = we.includes(e2.key) ? A2 : H2;
      return xe || (o3 = T2), R2({}, e2, { color: ue(e2.data), opacity: o3 });
    });
  }, [ge, xe, we, T2, A2, H2, ue]), Ce = (0, import_react.useMemo)(function() {
    return oe2.map(function(e2) {
      var o3 = function(e3) {
        var o4 = e3.boxPlots, i3 = e3.dataFrom, r3 = e3.legendLabel, n2 = gn(null != r3 ? r3 : i3), t3 = "group" === i3, a3 = o4.map(function(e4) {
          return { id: t3 ? e4.data.groupIndex : e4.data.subGroupIndex, label: n2(null == e4 ? void 0 : e4.data), color: null == e4 ? void 0 : e4.color };
        });
        return (0, import_sortBy.default)((0, import_uniqBy.default)(a3, function(e4) {
          return e4.label;
        }), function(e4) {
          return e4.id;
        });
      }({ boxPlots: Se, dataFrom: z3, legendLabel: K2 });
      return [e2, o3];
    });
  }, [oe2, Se, z3, K2]);
  return { boxPlots: Se, xScale: fe, yScale: be, getTooltipLabel: ne, formatValue: ae, getColor: ue, getBorderColor: de, getMedianColor: se, getWhiskerColor: ce, legendsData: Ce, activeItem: xe, setActiveItem: ke };
};
var $ = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var _ = function(i2) {
  var r2 = i2.data, n2 = i2.value, t2 = void 0 === n2 ? N.value : n2, d = i2.groupBy, s = void 0 === d ? N.groupBy : d, c = i2.groups, v = void 0 === c ? N.groups : c, b = i2.subGroupBy, y = void 0 === b ? N.subGroupBy : b, x = i2.subGroups, w3 = void 0 === x ? N.subGroups : x, S2 = i2.quantiles, C = void 0 === S2 ? N.quantiles : S2, G = i2.margin, B = i2.width, L = i2.height, W = i2.layout, I = void 0 === W ? N.layout : W, M2 = i2.minValue, V2 = void 0 === M2 ? N.minValue : M2, D2 = i2.maxValue, E3 = void 0 === D2 ? N.maxValue : D2, q2 = i2.valueScale, z3 = void 0 === q2 ? N.valueScale : q2, F2 = i2.indexScale, A2 = void 0 === F2 ? N.indexScale : F2, H2 = i2.padding, j3 = void 0 === H2 ? N.padding : H2, X2 = i2.innerPadding, Y2 = void 0 === X2 ? N.innerPadding : X2, Q2 = i2.opacity, K2 = void 0 === Q2 ? N.opacity : Q2, J2 = i2.activeOpacity, U2 = void 0 === J2 ? N.activeOpacity : J2, $2 = i2.inactiveOpacity, _2 = void 0 === $2 ? N.inactiveOpacity : $2, ee2 = i2.axisTop, oe2 = i2.axisRight, ie2 = i2.axisBottom, re = void 0 === ie2 ? N.axisBottom : ie2, ne = i2.axisLeft, te = void 0 === ne ? N.axisLeft : ne, ae = i2.enableGridX, le = void 0 === ae ? N.enableGridX : ae, ue = i2.enableGridY, de = void 0 === ue ? N.enableGridY : ue, se = i2.gridXValues, ce = i2.gridYValues, ve = i2.layers, pe = void 0 === ve ? N.layers : ve, me = i2.boxPlotComponent, he = void 0 === me ? N.boxPlotComponent : me, ge = i2.colorBy, fe = void 0 === ge ? N.colorBy : ge, be = i2.colors, ye = void 0 === be ? N.colors : be, xe = i2.defs, ke = void 0 === xe ? N.defs : xe, we = i2.fill, Se = i2.borderRadius, Ce = void 0 === Se ? N.borderRadius : Se, Ge = i2.borderWidth, Pe = void 0 === Ge ? N.borderWidth : Ge, Be = i2.borderColor, Le = void 0 === Be ? N.borderColor : Be, We = i2.medianWidth, Ie = void 0 === We ? N.medianWidth : We, Me = i2.medianColor, Ve = void 0 === Me ? N.medianColor : Me, De = i2.whiskerWidth, Ee = void 0 === De ? N.whiskerWidth : De, Re = i2.whiskerColor, qe = void 0 === Re ? N.whiskerColor : Re, ze = i2.whiskerEndSize, Fe = void 0 === ze ? N.whiskerEndSize : ze, Oe = i2.markers, Te = void 0 === Oe ? N.markers : Oe, Ae = i2.legendLabel, He = i2.tooltipLabel, je = void 0 === He ? N.tooltipLabel : He, Xe = i2.valueFormat, Ye2 = i2.isInteractive, Ne = void 0 === Ye2 ? N.isInteractive : Ye2, Qe = i2.tooltip, Ke = void 0 === Qe ? N.tooltip : Qe, Je = i2.onClick, Ue = i2.onMouseEnter, Ze = i2.onMouseLeave, $e = i2.annotations, _e = void 0 === $e ? N.annotations : $e, eo = i2.legends, oo = void 0 === eo ? N.legends : eo, io = i2.role, ro = void 0 === io ? N.role : io, no = i2.ariaLabel, to = i2.ariaLabelledBy, ao = i2.ariaDescribedBy, lo = i2.isFocusable, uo = void 0 === lo ? N.isFocusable : lo, so = i2.boxPlotAriaLabel, co = i2.boxPlotAriaLabelledBy, vo = i2.boxPlotAriaDescribedBy, po = i2.forwardedRef, mo = Dr(), ho = mo.animate, go = mo.config, fo = cn(B, L, G), bo = fo.outerWidth, yo = fo.outerHeight, xo = fo.margin, ko = fo.innerWidth, wo = fo.innerHeight, So = Z({ data: r2, value: t2, groupBy: s, groups: v, subGroupBy: y, subGroups: w3, quantiles: C, width: ko, height: wo, layout: I, minValue: V2, maxValue: E3, valueScale: z3, indexScale: A2, padding: j3, innerPadding: Y2, colorBy: fe, colors: ye, opacity: K2, activeOpacity: U2, inactiveOpacity: _2, borderColor: Le, medianColor: Ve, whiskerColor: qe, legendLabel: Ae, tooltipLabel: je, valueFormat: Xe, legends: oo }), Co = So.boxPlots, Go = So.xScale, Po = So.yScale, Bo = So.getTooltipLabel, Lo = So.getBorderColor, Wo = So.getMedianColor, Io = So.getWhiskerColor, Mo = So.legendsData, Vo = So.activeItem, Do = So.setActiveItem, Eo = function(e2) {
    var o2 = e2.boxPlots, i3 = e2.getBorderColor, r3 = e2.getMedianColor, n3 = e2.getWhiskerColor, t3 = e2.animate, a2 = e2.springConfig, l = function(e3) {
      return { borderColor: i3(e3), medianColor: r3(e3), whiskerColor: n3(e3), color: e3.color, opacity: e3.opacity, valueInterval: Math.abs(e3.coordinates.values[3] - e3.coordinates.values[1]), valueDistance0: e3.coordinates.values[0] - e3.coordinates.values[2], valueDistance1: e3.coordinates.values[1] - e3.coordinates.values[2], valueDistance3: e3.coordinates.values[3] - e3.coordinates.values[2], valueDistance4: e3.coordinates.values[4] - e3.coordinates.values[2], transform: "vertical" === e3.layout ? "translate(" + (e3.x + e3.width / 2) + ", " + e3.coordinates.values[2] + ")" : "translate(" + e3.coordinates.values[2] + ", " + (e3.y + e3.height / 2) + ") rotate(-90)" };
    };
    return useTransition(o2, { keys: function(e3) {
      return e3.key;
    }, initial: t3 ? void 0 : null, from: function(e3) {
      return R2({}, l(e3), { valueInterval: 0, valueDistance0: 0, valueDistance1: 0, valueDistance3: 0, valueDistance4: 0 });
    }, enter: function(e3) {
      return R2({}, l(e3));
    }, update: function(e3) {
      return R2({}, l(e3));
    }, leave: function(e3) {
      return R2({}, l(e3), { valueInterval: 0, valueDistance0: 0, valueDistance1: 0, valueDistance3: 0, valueDistance4: 0 });
    }, config: a2, immediate: !t3 });
  }({ boxPlots: Co, getBorderColor: Lo, getMedianColor: Wo, getWhiskerColor: Io, animate: ho, springConfig: go }), Ro = (0, import_react.useMemo)(function() {
    return { borderRadius: Ce, borderWidth: Pe, medianWidth: Ie, whiskerWidth: Ee, whiskerEndSize: Fe, padding: j3, innerPadding: Y2, isInteractive: Ne, onClick: Je, onMouseEnter: Ue, onMouseLeave: Ze, getTooltipLabel: Bo, tooltip: Ke, isFocusable: uo, ariaLabel: so, ariaLabelledBy: co, ariaDescribedBy: vo, activeItem: Vo, setActiveItem: Do };
  }, [Ce, Pe, Ie, Ee, Fe, j3, Y2, Ne, Je, Ue, Ze, Ke, Bo, uo, so, co, vo, Vo, Do]), qo = Mn(ke, Co, we, { dataKey: "data", targetKey: "fill" }), zo = { annotations: null, axes: null, boxPlots: null, grid: null, legends: null, markers: null };
  pe.includes("annotations") && (zo.annotations = (0, import_jsx_runtime.jsx)(O2, { boxPlots: Co, annotations: _e }, "annotations")), pe.includes("axes") && (zo.axes = (0, import_jsx_runtime.jsx)(V, { xScale: Go, yScale: Po, width: ko, height: wo, top: ee2, right: oe2, bottom: re, left: te }, "axes")), pe.includes("boxPlots") && (zo.boxPlots = (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: Eo(function(e2, i3) {
    return (0, import_react.createElement)(he, R2({}, Ro, { boxPlot: i3, layout: I, animatedProps: e2 }));
  }) }, "boxPlots")), pe.includes("grid") && (zo.grid = (0, import_jsx_runtime.jsx)(j, { width: ko, height: wo, xScale: le ? Go : null, yScale: de ? Po : null, xValues: se, yValues: ce }, "grid")), pe.includes("legends") && (zo.legends = (0, import_jsx_runtime.jsx)(T, { width: ko, height: wo, legends: Mo }, "legends")), pe.includes("markers") && (zo.markers = (0, import_jsx_runtime.jsx)(Pt, { markers: Te, width: ko, height: wo, xScale: Go, yScale: Po }, "markers"));
  var Fo = (0, import_react.useMemo)(function() {
    return R2({}, Ro, { layout: I, margin: xo, width: B, height: L, innerWidth: ko, innerHeight: wo, padding: j3, innerPadding: Y2, boxPlots: Co, onClick: Je, onMouseEnter: Ue, onMouseLeave: Ze, tooltip: Ke, getTooltipLabel: Bo, xScale: Go, yScale: Po });
  }, [Ro, I, xo, B, L, ko, wo, j3, Y2, Co, Je, Ue, Ze, Ke, Bo, Go, Po]);
  return (0, import_jsx_runtime.jsx)(Rt, { width: bo, height: yo, margin: xo, defs: qo, role: ro, ariaLabel: no, ariaLabelledBy: to, ariaDescribedBy: ao, isFocusable: uo, ref: po, children: pe.map(function(e2, i3) {
    var r3;
    return "function" == typeof e2 ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e2, Fo) }, i3) : null != (r3 = null == zo ? void 0 : zo[e2]) ? r3 : null;
  }) });
};
var ee = (0, import_react.forwardRef)(function(e2, o2) {
  var i2 = e2.isInteractive, r2 = void 0 === i2 ? N.isInteractive : i2, n2 = e2.animate, t2 = void 0 === n2 ? N.animate : n2, a2 = e2.motionConfig, l = void 0 === a2 ? N.motionConfig : a2, u = e2.theme, d = e2.renderWrapper, s = q(e2, $);
  return (0, import_jsx_runtime.jsx)(Fr, { animate: t2, isInteractive: r2, motionConfig: l, renderWrapper: d, theme: u, children: (0, import_jsx_runtime.jsx)(_, R2({ isInteractive: r2 }, s, { forwardedRef: o2 })) });
});
var oe = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var ie = (0, import_react.forwardRef)(function(e2, o2) {
  var i2 = e2.defaultWidth, r2 = e2.defaultHeight, n2 = e2.onResize, t2 = e2.debounceResize, a2 = q(e2, oe);
  return (0, import_jsx_runtime.jsx)($r, { defaultWidth: i2, defaultHeight: r2, onResize: n2, debounceResize: t2, children: function(e3) {
    var i3 = e3.width, r3 = e3.height;
    return (0, import_jsx_runtime.jsx)(ee, R2({ width: i3, height: r3 }, a2, { ref: o2 }));
  } });
});
export {
  ee as BoxPlot,
  H as BoxPlotItem,
  ie as ResponsiveBoxPlot,
  Y as defaultProps,
  N as svgDefaultProps
};
//# sourceMappingURL=@nivo_boxplot.js.map
