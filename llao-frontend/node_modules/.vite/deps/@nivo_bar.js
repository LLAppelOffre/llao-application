import {
  J,
  O,
  R,
  j as j2
} from "./chunk-NOKX7PNT.js";
import {
  V,
  W,
  j,
  pn,
  q,
  require_uniqBy
} from "./chunk-KLR4ML3O.js";
import {
  $r,
  AnimatedObject,
  Dr,
  E2 as E,
  FluidValue,
  Fr,
  L,
  M,
  Mn,
  Pt,
  Rn,
  Rt,
  T,
  Ye,
  a,
  addFluidObserver,
  b,
  bn,
  callFluidObservers,
  cn,
  colors2,
  createHost,
  createStringInterpolator2,
  d,
  diverging_default,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  gn,
  hasFluidValue,
  hn,
  hr,
  is,
  kn,
  removeFluidObserver,
  stack_default,
  to,
  toArray,
  useTransition,
  wn,
  z
} from "./chunk-FQLOU77L.js";
import {
  require_jsx_runtime
} from "./chunk-OT5EQO2H.js";
import {
  require_react_dom
} from "./chunk-WRD5HZVH.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_react = __toESM(require_react(), 1);

// node_modules/@nivo/bar/node_modules/@react-spring/web/dist/react-spring_web.modern.mjs
var import_react_dom = __toESM(require_react_dom(), 1);
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "") return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox,
    ...attributes
  } = props;
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(
    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (n2) => "-" + n2.toLowerCase()
    ))
  );
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i2) => {
    instance.setAttribute(name, values[i2]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor({ x, y, z: z2, ...style }) {
    const inputs = [];
    const transforms = [];
    if (x || y || z2) {
      inputs.push([x || 0, y || 0, z2 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        // prettier-ignore
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value)) return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(
          key === "rotate3d" ? ([x2, y2, z22, deg]) => [
            `rotate3d(${x2},${y2},${z22},${addUnit(deg, unit)})`,
            isValueIdentity(deg, 0)
          ] : (input) => [
            `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
            isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i2) => {
      const arg1 = getFluidValue(input[0]);
      const [t2, id] = this.transforms[i2](
        is.arr(arg1) ? arg1 : input.map(getFluidValue)
      );
      transform += " " + t2;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(count) {
    if (count == 1)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && addFluidObserver(value, this)
        )
      );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(count) {
    if (count == 0)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && removeFluidObserver(value, this)
        )
      );
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props
});
var animated = host.animated;

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/@nivo/canvas/dist/nivo-canvas.mjs
var o = function(o3, e2, r2, a3, i2, u) {
  u > 0 ? (o3.moveTo(e2 + u, r2), o3.lineTo(e2 + a3 - u, r2), o3.quadraticCurveTo(e2 + a3, r2, e2 + a3, r2 + u), o3.lineTo(e2 + a3, r2 + i2 - u), o3.quadraticCurveTo(e2 + a3, r2 + i2, e2 + a3 - u, r2 + i2), o3.lineTo(e2 + u, r2 + i2), o3.quadraticCurveTo(e2, r2 + i2, e2, r2 + i2 - u), o3.lineTo(e2, r2 + u), o3.quadraticCurveTo(e2, r2, e2 + u, r2), o3.closePath()) : o3.rect(e2, r2, a3, i2);
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_uniqBy = __toESM(require_uniqBy(), 1);
function Q() {
  return Q = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var a3 = arguments[t2];
      for (var i2 in a3) ({}).hasOwnProperty.call(a3, i2) && (e2[i2] = a3[i2]);
    }
    return e2;
  }, Q.apply(null, arguments);
}
function U(e2, t2) {
  if (null == e2) return {};
  var a3 = {};
  for (var i2 in e2) if ({}.hasOwnProperty.call(e2, i2)) {
    if (-1 !== t2.indexOf(i2)) continue;
    a3[i2] = e2[i2];
  }
  return a3;
}
var Z;
var $ = function(e2) {
  var t2 = e2.bars, a3 = e2.annotations, i2 = O({ data: t2, annotations: a3, getPosition: function(e3) {
    return { x: e3.x + e3.width / 2, y: e3.y + e3.height / 2 };
  }, getDimensions: function(e3) {
    var t3 = e3.height, a4 = e3.width;
    return { width: a4, height: t3, size: Math.max(a4, t3) };
  } });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: i2.map(function(e3, t3) {
    return (0, import_jsx_runtime.jsx)(R, Q({}, e3), t3);
  }) });
};
var ee = function(e2) {
  var t2 = e2.width, a3 = e2.height, i2 = e2.legends, n2 = e2.toggleSerie;
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: i2.map(function(e3, i3) {
    var l2, r2 = e3[0], o3 = e3[1];
    return (0, import_jsx_runtime.jsx)(E, Q({}, r2, { containerWidth: t2, containerHeight: a3, data: null != (l2 = r2.data) ? l2 : o3, toggleSerie: r2.toggleSerie && "keys" === r2.dataFrom ? n2 : void 0 }), i3);
  }) });
};
var te = ["data"];
var ae = function(i2) {
  var n2, l2 = i2.bar, r2 = l2.data, o3 = U(l2, te), d2 = i2.style, u = d2.borderColor, s = d2.color, c = d2.height, h = d2.labelColor, f = d2.labelOpacity, b2 = d2.labelX, g = d2.labelY, v = d2.transform, m = d2.width, p = d2.textAnchor, y = i2.borderRadius, x = i2.borderWidth, S = i2.label, k = i2.shouldRenderLabel, w = i2.isInteractive, L2 = i2.onClick, M2 = i2.onMouseEnter, B = i2.onMouseLeave, R2 = i2.tooltip, O2 = i2.isFocusable, I = i2.ariaLabel, T3 = i2.ariaLabelledBy, P = i2.ariaDescribedBy, E2 = i2.ariaDisabled, F = i2.ariaHidden, z2 = M(), X = z(), G = X.showTooltipFromEvent, N = X.showTooltipAt, j3 = X.hideTooltip, K = (0, import_react.useMemo)(function() {
    return function() {
      return (0, import_react.createElement)(R2, Q({}, o3, r2));
    };
  }, [R2, o3, r2]), _ = (0, import_react.useCallback)(function(e2) {
    null == L2 || L2(Q({ color: o3.color }, r2), e2);
  }, [o3, r2, L2]), q2 = (0, import_react.useCallback)(function(e2) {
    return G(K(), e2);
  }, [G, K]), J3 = (0, import_react.useCallback)(function(e2) {
    null == M2 || M2(r2, e2), G(K(), e2);
  }, [r2, M2, G, K]), Z2 = (0, import_react.useCallback)(function(e2) {
    null == B || B(r2, e2), j3();
  }, [r2, j3, B]), $2 = (0, import_react.useCallback)(function() {
    N(K(), [o3.absX + o3.width / 2, o3.absY]);
  }, [N, K, o3]), ee2 = (0, import_react.useCallback)(function() {
    j3();
  }, [j3]);
  return (0, import_jsx_runtime.jsxs)(animated.g, { transform: v, children: [(0, import_jsx_runtime.jsx)(animated.rect, { width: to(m, function(e2) {
    return Math.max(e2, 0);
  }), height: to(c, function(e2) {
    return Math.max(e2, 0);
  }), rx: y, ry: y, fill: null != (n2 = r2.fill) ? n2 : s, strokeWidth: x, stroke: u, focusable: O2, tabIndex: O2 ? 0 : void 0, "aria-label": I ? I(r2) : void 0, "aria-labelledby": T3 ? T3(r2) : void 0, "aria-describedby": P ? P(r2) : void 0, "aria-disabled": E2 ? E2(r2) : void 0, "aria-hidden": F ? F(r2) : void 0, onMouseEnter: w ? J3 : void 0, onMouseMove: w ? q2 : void 0, onMouseLeave: w ? Z2 : void 0, onClick: w ? _ : void 0, onFocus: w && O2 ? $2 : void 0, onBlur: w && O2 ? ee2 : void 0, "data-testid": "bar.item." + r2.id + "." + r2.index }), k && (0, import_jsx_runtime.jsx)(b, { x: b2, y: g, textAnchor: p, dominantBaseline: "central", fillOpacity: f, style: Q({}, z2.labels.text, { pointerEvents: "none", fill: h }), children: S })] });
};
var ie = ["color", "label"];
var ne = function(e2) {
  var t2 = e2.color, a3 = e2.label, i2 = U(e2, ie);
  return (0, import_jsx_runtime.jsx)(T, { id: a3, value: i2.formattedValue, enableChip: true, color: t2 });
};
var le = { indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", valueScale: { type: "linear", nice: true, round: false }, indexScale: { type: "band", round: false }, padding: 0.1, innerPadding: 0, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelPosition: "middle", labelOffset: 0, labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: { theme: "labels.text.fill" }, colorBy: "id", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, isInteractive: true, tooltip: ne, tooltipLabel: function(e2) {
  return e2.id + " - " + e2.indexValue;
}, legends: [], initialHiddenIds: [], annotations: [], enableTotals: false, totalsOffset: 10 };
var re = Q({}, le, { layers: ["grid", "axes", "bars", "totals", "markers", "legends", "annotations"], axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, barComponent: ae, defs: [], fill: [], markers: [], animate: true, animateOnMount: false, motionConfig: "default", role: "img", isFocusable: false });
var oe = Q({}, le, { layers: ["grid", "axes", "bars", "totals", "legends", "annotations"], axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, renderBar: function(e2, t2) {
  var a3 = t2.bar, i2 = a3.color, n2 = a3.height, l2 = a3.width, r2 = a3.x, o3 = a3.y, d2 = t2.borderColor, u = t2.borderRadius, s = t2.borderWidth, c = t2.label, h = t2.shouldRenderLabel, f = t2.labelStyle, b2 = t2.labelX, g = t2.labelY, v = t2.textAnchor;
  e2.fillStyle = i2, s > 0 && (e2.strokeStyle = d2, e2.lineWidth = s), e2.beginPath(), o(e2, r2, o3, l2, n2, Math.min(u, n2)), e2.fill(), s > 0 && e2.stroke(), h && (e2.textBaseline = "middle", e2.textAlign = "middle" === v ? "center" : v, d(e2, f, c, r2 + b2, o3 + g));
}, pixelRatio: "undefined" != typeof window && null != (Z = window.devicePixelRatio) ? Z : 1 });
var de = function(e2, t2, a3, i2, n2, l2) {
  return pn(i2, { all: e2.map(t2), min: 0, max: 0 }, n2, l2).padding(a3);
};
var ue = function(e2, t2) {
  return e2.map(function(e3) {
    return Q({}, t2.reduce(function(e4, t3) {
      return e4[t3] = null, e4;
    }, {}), e3);
  });
};
var se = function(e2) {
  return Object.keys(e2).reduce(function(t2, a3) {
    return e2[a3] && (t2[a3] = e2[a3]), t2;
  }, {});
};
var ce = function(e2) {
  return [e2, Number(e2)];
};
function he(e2, t2, a3, i2) {
  return void 0 === e2 && (e2 = le.layout), void 0 === a3 && (a3 = le.labelPosition), void 0 === i2 && (i2 = le.labelOffset), function(n2, l2) {
    var r2 = i2 * (t2 ? -1 : 1);
    if ("horizontal" === e2) {
      var o3 = n2 / 2;
      return "start" === a3 ? o3 = t2 ? n2 : 0 : "end" === a3 && (o3 = t2 ? 0 : n2), { labelX: o3 + r2, labelY: l2 / 2, textAnchor: "middle" === a3 ? "middle" : t2 ? "end" : "start" };
    }
    var d2 = l2 / 2;
    return "start" === a3 ? d2 = t2 ? 0 : l2 : "end" === a3 && (d2 = t2 ? l2 : 0), { labelX: n2 / 2, labelY: d2 - r2, textAnchor: "middle" };
  };
}
var fe = ["layout", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
var be = function(e2, t2) {
  return e2 > t2;
};
var ge = function(e2, t2) {
  return e2 < t2;
};
var ve = function(e2, t2) {
  return Array.from(" ".repeat(t2 - e2), function(t3, a3) {
    return e2 + a3;
  });
};
var me = function(e2) {
  return be(e2, 0) ? 0 : e2;
};
var pe = function(e2, t2, a3, i2) {
  var n2 = e2.data, l2 = e2.formatValue, r2 = e2.getColor, o3 = e2.getIndex, d2 = e2.getTooltipLabel, u = e2.innerPadding, s = void 0 === u ? 0 : u, c = e2.keys, h = e2.xScale, f = e2.yScale, b2 = e2.margin, g = a3 ? ge : be, v = n2.map(se), m = [];
  return c.forEach(function(e3, a4) {
    return ve(0, h.domain().length).forEach(function(u2) {
      var c2, p, y, x = ce(n2[u2][e3]), S = x[0], k = x[1], w = o3(n2[u2]), L2 = (null != (c2 = h(w)) ? c2 : 0) + t2 * a4 + s * a4, C = g(p = k, 0) ? null != (y = f(p)) ? y : 0 : i2, W2 = function(e4, t3) {
        var a5;
        return g(e4, 0) ? i2 - t3 : (null != (a5 = f(e4)) ? a5 : 0) - i2;
      }(k, C), M2 = { id: e3, value: null === S ? S : k, formattedValue: l2(k), hidden: false, index: u2, indexValue: w, data: v[u2] };
      m.push({ key: e3 + "." + M2.indexValue, index: m.length, data: M2, x: L2, y: C, absX: b2.left + L2, absY: b2.top + C, width: t2, height: W2, color: r2(M2), label: d2(M2) });
    });
  }), m;
};
var ye = function(e2, t2, a3, i2) {
  var n2 = e2.data, l2 = e2.formatValue, r2 = e2.getIndex, o3 = e2.getColor, d2 = e2.getTooltipLabel, u = e2.keys, s = e2.innerPadding, c = void 0 === s ? 0 : s, h = e2.xScale, f = e2.yScale, b2 = e2.margin, g = a3 ? ge : be, v = n2.map(se), m = [];
  return u.forEach(function(e3, a4) {
    return ve(0, f.domain().length).forEach(function(u2) {
      var s2, p, y, x = ce(n2[u2][e3]), S = x[0], k = x[1], w = r2(n2[u2]), L2 = g(p = k, 0) ? i2 : null != (y = h(p)) ? y : 0, C = (null != (s2 = f(w)) ? s2 : 0) + t2 * a4 + c * a4, W2 = function(e4, t3) {
        var a5;
        return g(e4, 0) ? (null != (a5 = h(e4)) ? a5 : 0) - i2 : i2 - t3;
      }(k, L2), M2 = { id: e3, value: null === S ? S : k, formattedValue: l2(k), hidden: false, index: u2, indexValue: w, data: v[u2] };
      m.push({ key: e3 + "." + M2.indexValue, index: m.length, data: M2, x: L2, y: C, absX: b2.left + L2, absY: b2.top + C, width: W2, height: t2, color: o3(M2), label: d2(M2) });
    });
  }), m;
};
var xe = function(e2) {
  var t2, a3, i2, n2 = e2.layout, l2 = e2.width, r2 = e2.height, o3 = e2.padding, d2 = void 0 === o3 ? 0 : o3, u = e2.innerPadding, s = void 0 === u ? 0 : u, c = e2.valueScale, h = e2.indexScale, f = e2.hiddenIds, b2 = void 0 === f ? [] : f, g = U(e2, fe), v = g.keys.filter(function(e3) {
    return !b2.includes(e3);
  }), m = ue(g.data, v), p = "vertical" === n2 ? ["y", "x", l2] : ["x", "y", r2], y = p[0], x = p[1], S = p[2], k = de(m, g.getIndex, d2, h, S, x), w = "auto" === c.min ? me : function(e3) {
    return e3;
  }, L2 = m.reduce(function(e3, t3) {
    return [].concat(e3, v.map(function(e4) {
      return t3[e4];
    }));
  }, []).filter(Boolean), C = w(Math.min.apply(Math, L2)), W2 = (i2 = Math.max.apply(Math, L2), isFinite(i2) ? i2 : 0), M2 = pn(c, { all: L2, min: C, max: W2 }, "x" === y ? l2 : r2, y), B = "vertical" === n2 ? [k, M2] : [M2, k], R2 = B[0], O2 = B[1], I = (k.bandwidth() - s * (v.length - 1)) / v.length, V3 = [Q({}, g, { data: m, keys: v, innerPadding: s, xScale: R2, yScale: O2 }), I, null != (t2 = c.reverse) && t2, null != (a3 = M2(0)) ? a3 : 0];
  return { xScale: R2, yScale: O2, bars: I > 0 ? "vertical" === n2 ? pe.apply(void 0, V3) : ye.apply(void 0, V3) : [] };
};
var Se = ["data", "layout", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
var ke = function(e2) {
  var t2;
  return e2.some(Array.isArray) ? ke((t2 = []).concat.apply(t2, e2)) : e2;
};
var we = function(e2, t2, a3) {
  var i2 = e2.formatValue, n2 = e2.getColor, l2 = e2.getIndex, r2 = e2.getTooltipLabel, o3 = e2.innerPadding, d2 = e2.stackedData, u = e2.xScale, s = e2.yScale, c = e2.margin, h = [];
  return d2.forEach(function(e3) {
    return u.domain().forEach(function(d3, f) {
      var b2, g, v = e3[f], m = null != (b2 = u(l2(v.data))) ? b2 : 0, p = (null != (g = function(e4) {
        return s(e4[a3 ? 0 : 1]);
      }(v)) ? g : 0) + 0.5 * o3, y = function(e4, t3) {
        var i3;
        return (null != (i3 = s(e4[a3 ? 1 : 0])) ? i3 : 0) - t3;
      }(v, p) - o3, x = ce(v.data[e3.key]), S = x[0], k = x[1], w = { id: e3.key, value: null === S ? S : k, formattedValue: i2(k), hidden: false, index: f, indexValue: d3, data: se(v.data) };
      h.push({ key: e3.key + "." + d3, index: h.length, data: w, x: m, y: p, absX: c.left + m, absY: c.top + p, width: t2, height: y, color: n2(w), label: r2(w) });
    });
  }), h;
};
var Le = function(e2, t2, a3) {
  var i2 = e2.formatValue, n2 = e2.getColor, l2 = e2.getIndex, r2 = e2.getTooltipLabel, o3 = e2.innerPadding, d2 = e2.stackedData, u = e2.xScale, s = e2.yScale, c = e2.margin, h = [];
  return d2.forEach(function(e3) {
    return s.domain().forEach(function(d3, f) {
      var b2, g, v = e3[f], m = null != (b2 = s(l2(v.data))) ? b2 : 0, p = (null != (g = function(e4) {
        return u(e4[a3 ? 1 : 0]);
      }(v)) ? g : 0) + 0.5 * o3, y = function(e4, t3) {
        var i3;
        return (null != (i3 = u(e4[a3 ? 0 : 1])) ? i3 : 0) - t3;
      }(v, p) - o3, x = ce(v.data[e3.key]), S = x[0], k = x[1], w = { id: e3.key, value: null === S ? S : k, formattedValue: i2(k), hidden: false, index: f, indexValue: d3, data: se(v.data) };
      h.push({ key: e3.key + "." + d3, index: h.length, data: w, x: p, y: m, absX: c.left + p, absY: c.top + m, width: y, height: t2, color: n2(w), label: r2(w) });
    });
  }), h;
};
var Ce = function(e2) {
  var t2, a3, i2 = e2.data, n2 = e2.layout, l2 = e2.width, r2 = e2.height, o3 = e2.padding, d2 = void 0 === o3 ? 0 : o3, u = e2.valueScale, s = e2.indexScale, c = e2.hiddenIds, h = void 0 === c ? [] : c, f = U(e2, Se), b2 = f.keys.filter(function(e3) {
    return !h.includes(e3);
  }), g = stack_default().keys(b2).offset(diverging_default)(ue(i2, b2)), v = "vertical" === n2 ? ["y", "x", l2] : ["x", "y", r2], m = v[0], p = v[1], y = v[2], x = de(i2, f.getIndex, d2, s, y, p), S = (a3 = ke(g), "log" === u.type ? a3.filter(function(e3) {
    return 0 !== e3;
  }) : a3), k = Math.min.apply(Math, S), w = Math.max.apply(Math, S), L2 = pn(u, { all: S, min: k, max: w }, "x" === m ? l2 : r2, m), C = "vertical" === n2 ? [x, L2] : [L2, x], W2 = C[0], M2 = C[1], B = f.innerPadding > 0 ? f.innerPadding : 0, R2 = x.bandwidth(), O2 = [Q({}, f, { innerPadding: B, stackedData: g, xScale: W2, yScale: M2 }), R2, null != (t2 = u.reverse) && t2];
  return { xScale: W2, yScale: M2, bars: R2 > 0 ? "vertical" === n2 ? we.apply(void 0, O2) : Le.apply(void 0, O2) : [] };
};
var We = function(e2) {
  var t2 = e2.bars, a3 = e2.direction, i2 = e2.from, n2 = e2.groupMode, l2 = e2.layout, r2 = e2.legendLabel, o3 = e2.reverse, d2 = gn(null != r2 ? r2 : "indexes" === i2 ? "indexValue" : "id");
  return "indexes" === i2 ? function(e3, t3, a4) {
    var i3 = (0, import_uniqBy.default)(e3.map(function(e4) {
      var t4, i4;
      return { id: null != (t4 = e4.data.indexValue) ? t4 : "", label: a4(e4.data), hidden: e4.data.hidden, color: null != (i4 = e4.color) ? i4 : "#000" };
    }), function(e4) {
      return e4.id;
    });
    return "horizontal" === t3 && i3.reverse(), i3;
  }(t2, l2, d2) : function(e3, t3, a4, i3, n3, l3) {
    var r3 = (0, import_uniqBy.default)(e3.map(function(e4) {
      var t4;
      return { id: e4.data.id, label: l3(e4.data), hidden: e4.data.hidden, color: null != (t4 = e4.color) ? t4 : "#000" };
    }), function(e4) {
      return e4.id;
    });
    return ("vertical" === t3 && "stacked" === i3 && "column" === a4 && true !== n3 || "horizontal" === t3 && "stacked" === i3 && true === n3) && r3.reverse(), r3;
  }(t2, l2, a3, n2, o3, d2);
};
var Me = function(e2, t2, a3) {
  var i2 = e2.get(t2) || 0;
  e2.set(t2, i2 + a3);
};
var Be = function(e2, t2, a3) {
  var i2 = e2.get(t2) || 0;
  e2.set(t2, i2 + (a3 > 0 ? a3 : 0));
};
var Re = function(e2, t2, a3) {
  var i2 = e2.get(t2) || 0;
  e2.set(t2, Math.max(i2, Number(a3)));
};
var Oe = function(e2, t2) {
  var a3 = e2.get(t2) || 0;
  e2.set(t2, a3 + 1);
};
var Ie = function(t2) {
  var n2, l2 = t2.indexBy, r2 = void 0 === l2 ? le.indexBy : l2, o3 = t2.keys, d2 = void 0 === o3 ? le.keys : o3, u = t2.label, s = void 0 === u ? le.label : u, c = t2.tooltipLabel, h = void 0 === c ? le.tooltipLabel : c, g = t2.valueFormat, v = t2.colors, m = void 0 === v ? le.colors : v, p = t2.colorBy, y = void 0 === p ? le.colorBy : p, x = t2.borderColor, S = void 0 === x ? le.borderColor : x, k = t2.labelTextColor, w = void 0 === k ? le.labelTextColor : k, L2 = t2.groupMode, C = void 0 === L2 ? le.groupMode : L2, W2 = t2.layout, M2 = void 0 === W2 ? le.layout : W2, B = t2.data, R2 = t2.margin, O2 = t2.width, I = t2.height, V3 = t2.padding, T3 = void 0 === V3 ? le.padding : V3, H2 = t2.innerPadding, P = void 0 === H2 ? le.innerPadding : H2, E2 = t2.valueScale, A = void 0 === E2 ? le.valueScale : E2, X = t2.indexScale, Y = void 0 === X ? le.indexScale : X, G = t2.initialHiddenIds, N = void 0 === G ? le.initialHiddenIds : G, j3 = t2.enableLabel, K = void 0 === j3 ? le.enableLabel : j3, _ = t2.labelSkipWidth, q2 = void 0 === _ ? le.labelSkipWidth : _, J3 = t2.labelSkipHeight, U2 = void 0 === J3 ? le.labelSkipHeight : J3, Z2 = t2.legends, $2 = void 0 === Z2 ? le.legends : Z2, ee2 = t2.legendLabel, te2 = t2.totalsOffset, ae2 = void 0 === te2 ? le.totalsOffset : te2, ie2 = (0, import_react.useState)(null != N ? N : []), ne2 = ie2[0], re2 = ie2[1], oe2 = (0, import_react.useCallback)(function(e2) {
    re2(function(t3) {
      return t3.indexOf(e2) > -1 ? t3.filter(function(t4) {
        return t4 !== e2;
      }) : [].concat(t3, [e2]);
    });
  }, []), de2 = bn(r2), ue2 = bn(s), se2 = bn(h), ce2 = hn(g), he2 = M(), fe2 = hr(m, y), be2 = Ye(S, he2), ge2 = Ye(w, he2), ve2 = ("grouped" === C ? xe : Ce)({ layout: M2, data: B, getIndex: de2, keys: d2, width: O2, height: I, getColor: fe2, padding: T3, innerPadding: P, valueScale: A, indexScale: Y, hiddenIds: ne2, formatValue: ce2, getTooltipLabel: se2, margin: R2 }), me2 = ve2.bars, pe2 = ve2.xScale, ye2 = ve2.yScale, Se2 = (0, import_react.useMemo)(function() {
    return me2.filter(function(e2) {
      return null !== e2.data.value;
    }).map(function(e2, t3) {
      return Q({}, e2, { index: t3 });
    });
  }, [me2]), ke2 = (0, import_react.useCallback)(function(e2) {
    var t3 = e2.width, a3 = e2.height;
    return !!K && (!(q2 > 0 && t3 < q2) && !(U2 > 0 && a3 < U2));
  }, [K, q2, U2]), we2 = (0, import_react.useMemo)(function() {
    return d2.map(function(e2) {
      var t3 = me2.find(function(t4) {
        return t4.data.id === e2;
      });
      return Q({}, t3, { data: Q({ id: e2 }, null == t3 ? void 0 : t3.data, { hidden: ne2.includes(e2) }) });
    });
  }, [ne2, d2, me2]), Le2 = null != (n2 = A.reverse) && n2, Ie2 = (0, import_react.useMemo)(function() {
    return $2.map(function(e2) {
      return [e2, We({ bars: "keys" === e2.dataFrom ? we2 : me2, direction: e2.direction, from: e2.dataFrom, groupMode: C, layout: M2, legendLabel: ee2, reverse: Le2 })];
    });
  }, [$2, we2, me2, C, M2, ee2, Le2]), Ve2 = (0, import_react.useMemo)(function() {
    return function(e2, t3, a3, i2, n3, l3, r3) {
      void 0 === i2 && (i2 = le.layout), void 0 === n3 && (n3 = le.groupMode);
      var o4 = [];
      if (0 === e2.length) return o4;
      var d3 = /* @__PURE__ */ new Map(), u2 = e2[0].width, s2 = e2[0].height;
      if ("stacked" === n3) {
        var c2 = /* @__PURE__ */ new Map();
        e2.forEach(function(e3) {
          var t4 = e3.data, a4 = t4.indexValue, i3 = t4.value;
          Me(d3, a4, Number(i3)), Be(c2, a4, Number(i3));
        }), c2.forEach(function(e3, n4) {
          var c3, h3, f2, b2 = d3.get(n4) || 0;
          "vertical" === i2 ? (c3 = t3(n4), h3 = a3(e3), f2 = a3(e3 / 2)) : (c3 = t3(e3), h3 = a3(n4), f2 = t3(e3 / 2)), c3 += "vertical" === i2 ? u2 / 2 : l3, h3 += "vertical" === i2 ? -l3 : s2 / 2, o4.push({ key: "total_" + n4, x: c3, y: h3, value: b2, formattedValue: r3(b2), animationOffset: f2 });
        });
      } else if ("grouped" === n3) {
        var h2 = /* @__PURE__ */ new Map(), f = /* @__PURE__ */ new Map();
        e2.forEach(function(e3) {
          var t4 = e3.data, a4 = t4.indexValue, i3 = t4.value;
          Me(d3, a4, Number(i3)), Re(h2, a4, Number(i3)), Oe(f, a4);
        }), h2.forEach(function(e3, n4) {
          var c3, h3, b2, g2 = d3.get(n4) || 0, v2 = f.get(n4);
          "vertical" === i2 ? (c3 = t3(n4), h3 = a3(e3), b2 = a3(e3 / 2)) : (c3 = t3(e3), h3 = a3(n4), b2 = t3(e3 / 2)), c3 += "vertical" === i2 ? v2 * u2 / 2 : l3, h3 += "vertical" === i2 ? -l3 : v2 * s2 / 2, o4.push({ key: "total_" + n4, x: c3, y: h3, value: g2, formattedValue: r3(g2), animationOffset: b2 });
        });
      }
      return o4;
    }(me2, pe2, ye2, M2, C, ae2, ce2);
  }, [me2, pe2, ye2, M2, C, ae2, ce2]);
  return { bars: me2, barsWithValue: Se2, xScale: pe2, yScale: ye2, getIndex: de2, getLabel: ue2, getTooltipLabel: se2, formatValue: ce2, getColor: fe2, getBorderColor: be2, getLabelColor: ge2, shouldRenderBarLabel: ke2, hiddenIds: ne2, toggleSerie: oe2, legendsWithData: Ie2, barTotals: Ve2 };
};
var Ve = function(e2) {
  var t2 = e2.data, a3 = e2.springConfig, i2 = e2.animate, n2 = e2.layout, l2 = void 0 === n2 ? re.layout : n2, r2 = M();
  return useTransition(t2, { keys: function(e3) {
    return e3.key;
  }, from: function(e3) {
    return { x: "vertical" === l2 ? e3.x : e3.animationOffset, y: "vertical" === l2 ? e3.animationOffset : e3.y, labelOpacity: 0 };
  }, enter: function(e3) {
    return { x: e3.x, y: e3.y, labelOpacity: 1 };
  }, update: function(e3) {
    return { x: e3.x, y: e3.y, labelOpacity: 1 };
  }, leave: function(e3) {
    return { x: "vertical" === l2 ? e3.x : e3.animationOffset, y: "vertical" === l2 ? e3.animationOffset : e3.y, labelOpacity: 0 };
  }, config: a3, immediate: !i2, initial: i2 ? void 0 : null })(function(e3, t3) {
    return (0, import_jsx_runtime.jsx)(animated.text, { x: e3.x, y: e3.y, fillOpacity: e3.labelOpacity, style: Q({}, r2.labels.text, { pointerEvents: "none" }), fontWeight: "bold", fontSize: r2.labels.text.fontSize, fontFamily: r2.labels.text.fontFamily, textAnchor: "vertical" === l2 ? "middle" : "start", alignmentBaseline: "vertical" === l2 ? "alphabetic" : "middle", children: t3.formattedValue }, t3.key);
  });
};
var Te = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var He = function(a3) {
  var i2, n2 = a3.data, r2 = a3.indexBy, o3 = a3.keys, s = a3.margin, c = a3.width, h = a3.height, f = a3.groupMode, b2 = a3.layout, g = a3.valueScale, S = a3.indexScale, k = a3.padding, w = a3.innerPadding, L2 = a3.axisTop, C = a3.axisRight, W2 = a3.axisBottom, B = void 0 === W2 ? re.axisBottom : W2, R2 = a3.axisLeft, O2 = void 0 === R2 ? re.axisLeft : R2, I = a3.enableGridX, T3 = void 0 === I ? re.enableGridX : I, H2 = a3.enableGridY, P = void 0 === H2 ? re.enableGridY : H2, E2 = a3.gridXValues, F = a3.gridYValues, z2 = a3.layers, D = void 0 === z2 ? re.layers : z2, A = a3.barComponent, X = void 0 === A ? re.barComponent : A, Y = a3.enableLabel, G = void 0 === Y ? re.enableLabel : Y, N = a3.label, j3 = a3.labelSkipWidth, K = void 0 === j3 ? re.labelSkipWidth : j3, _ = a3.labelSkipHeight, q2 = void 0 === _ ? re.labelSkipHeight : _, J3 = a3.labelTextColor, U2 = a3.labelPosition, Z2 = void 0 === U2 ? re.labelPosition : U2, te2 = a3.labelOffset, ae2 = void 0 === te2 ? re.labelOffset : te2, ie2 = a3.markers, ne2 = void 0 === ie2 ? re.markers : ie2, le2 = a3.colorBy, oe2 = a3.colors, de2 = a3.defs, ue2 = void 0 === de2 ? re.defs : de2, se2 = a3.fill, ce2 = void 0 === se2 ? re.fill : se2, fe2 = a3.borderRadius, be2 = void 0 === fe2 ? re.borderRadius : fe2, ge2 = a3.borderWidth, ve2 = void 0 === ge2 ? re.borderWidth : ge2, me2 = a3.borderColor, pe2 = a3.annotations, ye2 = void 0 === pe2 ? re.annotations : pe2, xe2 = a3.legendLabel, Se2 = a3.tooltipLabel, ke2 = a3.valueFormat, we2 = a3.isInteractive, Le2 = void 0 === we2 ? re.isInteractive : we2, Ce2 = a3.tooltip, We2 = void 0 === Ce2 ? re.tooltip : Ce2, Me2 = a3.onClick, Be2 = a3.onMouseEnter, Re2 = a3.onMouseLeave, Oe2 = a3.legends, Te2 = a3.role, He2 = void 0 === Te2 ? re.role : Te2, Pe2 = a3.ariaLabel, Ee2 = a3.ariaLabelledBy, Fe2 = a3.ariaDescribedBy, ze2 = a3.isFocusable, De2 = void 0 === ze2 ? re.isFocusable : ze2, Ae2 = a3.barAriaLabel, Xe2 = a3.barAriaLabelledBy, Ye3 = a3.barAriaDescribedBy, Ge2 = a3.barAriaHidden, Ne = a3.barAriaDisabled, je = a3.initialHiddenIds, Ke = a3.enableTotals, _e = void 0 === Ke ? re.enableTotals : Ke, qe = a3.totalsOffset, Je = void 0 === qe ? re.totalsOffset : qe, Qe = a3.forwardedRef, Ue = Dr(), Ze = Ue.animate, $e = Ue.config, et = cn(c, h, s), tt = et.outerWidth, at = et.outerHeight, it = et.margin, nt = et.innerWidth, lt = et.innerHeight, rt = Ie({ indexBy: r2, label: N, tooltipLabel: Se2, valueFormat: ke2, colors: oe2, colorBy: le2, borderColor: me2, labelTextColor: J3, groupMode: f, layout: b2, data: n2, keys: o3, margin: it, width: nt, height: lt, padding: k, innerPadding: w, valueScale: g, indexScale: S, enableLabel: G, labelSkipWidth: K, labelSkipHeight: q2, legends: Oe2, legendLabel: xe2, initialHiddenIds: je, totalsOffset: Je }), ot = rt.bars, dt = rt.barsWithValue, ut = rt.xScale, st = rt.yScale, ct = rt.getLabel, ht = rt.getTooltipLabel, ft = rt.getBorderColor, bt = rt.getLabelColor, gt = rt.shouldRenderBarLabel, vt = rt.toggleSerie, mt = rt.legendsWithData, pt = rt.barTotals, yt = rt.getColor, xt = he(b2, null != (i2 = null == g ? void 0 : g.reverse) && i2, Z2, ae2), St = useTransition(dt, { keys: function(e2) {
    return e2.key;
  }, from: function(e2) {
    return Q({ borderColor: ft(e2), color: e2.color, height: 0, labelColor: bt(e2), labelOpacity: 0 }, xt(e2.width, e2.height), { transform: "translate(" + e2.x + ", " + (e2.y + e2.height) + ")", width: e2.width }, "vertical" === b2 ? {} : { height: e2.height, transform: "translate(" + e2.x + ", " + e2.y + ")", width: 0 });
  }, enter: function(e2) {
    return Q({ borderColor: ft(e2), color: e2.color, height: e2.height, labelColor: bt(e2), labelOpacity: 1 }, xt(e2.width, e2.height), { transform: "translate(" + e2.x + ", " + e2.y + ")", width: e2.width });
  }, update: function(e2) {
    return Q({ borderColor: ft(e2), color: e2.color, height: e2.height, labelColor: bt(e2), labelOpacity: 1 }, xt(e2.width, e2.height), { transform: "translate(" + e2.x + ", " + e2.y + ")", width: e2.width });
  }, leave: function(e2) {
    return Q({ borderColor: ft(e2), color: e2.color, height: 0, labelColor: bt(e2), labelOpacity: 0 }, xt(e2.width, e2.height), { labelY: 0, transform: "translate(" + e2.x + ", " + (e2.y + e2.height) + ")", width: e2.width }, "vertical" === b2 ? {} : Q({}, xt(e2.width, e2.height), { labelX: 0, height: e2.height, transform: "translate(" + e2.x + ", " + e2.y + ")", width: 0 }));
  }, config: $e, immediate: !Ze, initial: Ze ? void 0 : null }), kt = (0, import_react.useMemo)(function() {
    return { borderRadius: be2, borderWidth: ve2, enableLabel: G, isInteractive: Le2, labelSkipWidth: K, labelSkipHeight: q2, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getTooltipLabel: ht, tooltip: We2, isFocusable: De2, ariaLabel: Ae2, ariaLabelledBy: Xe2, ariaDescribedBy: Ye3, ariaHidden: Ge2, ariaDisabled: Ne };
  }, [be2, ve2, G, ht, Le2, q2, K, Me2, Be2, Re2, We2, De2, Ae2, Xe2, Ye3, Ge2, Ne]), wt = Mn(ue2, ot, ce2, { dataKey: "data", targetKey: "data.fill" }), Lt = { annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null, totals: null };
  D.includes("annotations") && (Lt.annotations = (0, import_jsx_runtime.jsx)($, { bars: ot, annotations: ye2 }, "annotations")), D.includes("axes") && (Lt.axes = (0, import_jsx_runtime.jsx)(V, { xScale: ut, yScale: st, width: nt, height: lt, top: L2, right: C, bottom: B, left: O2 }, "axes")), D.includes("bars") && (Lt.bars = (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: St(function(e2, a4) {
    return (0, import_react.createElement)(X, Q({}, kt, { bar: a4, style: e2, shouldRenderLabel: gt(a4), label: ct(a4.data) }));
  }) }, "bars")), D.includes("grid") && (Lt.grid = (0, import_jsx_runtime.jsx)(j, { width: nt, height: lt, xScale: T3 ? ut : null, yScale: P ? st : null, xValues: E2, yValues: F }, "grid")), D.includes("legends") && (Lt.legends = (0, import_jsx_runtime.jsx)(ee, { width: nt, height: lt, legends: mt, toggleSerie: vt }, "legends")), D.includes("markers") && (Lt.markers = (0, import_jsx_runtime.jsx)(Pt, { markers: ne2, width: nt, height: lt, xScale: ut, yScale: st }, "markers")), D.includes("totals") && _e && (Lt.totals = (0, import_jsx_runtime.jsx)(Ve, { data: pt, springConfig: $e, animate: Ze, layout: b2 }, "totals"));
  var Ct = Q({}, kt, { margin: it, width: c, height: h, innerWidth: nt, innerHeight: lt, bars: ot, legendData: mt, enableLabel: G, xScale: ut, yScale: st, tooltip: We2, getTooltipLabel: ht, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getColor: yt });
  return (0, import_jsx_runtime.jsx)(Rt, { width: tt, height: at, margin: it, defs: wt, role: He2, ariaLabel: Pe2, ariaLabelledBy: Ee2, ariaDescribedBy: Fe2, isFocusable: De2, ref: Qe, children: D.map(function(e2, a4) {
    var i3;
    return "function" == typeof e2 ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e2, Ct) }, a4) : null != (i3 = null == Lt ? void 0 : Lt[e2]) ? i3 : null;
  }) });
};
var Pe = (0, import_react.forwardRef)(function(e2, t2) {
  var a3 = e2.isInteractive, i2 = void 0 === a3 ? re.isInteractive : a3, n2 = e2.animate, l2 = void 0 === n2 ? re.animate : n2, r2 = e2.motionConfig, o3 = void 0 === r2 ? re.motionConfig : r2, d2 = e2.theme, u = e2.renderWrapper, s = U(e2, Te);
  return (0, import_jsx_runtime.jsx)(Fr, { animate: l2, isInteractive: i2, motionConfig: o3, renderWrapper: u, theme: d2, children: (0, import_jsx_runtime.jsx)(He, Q({}, s, { isInteractive: i2, forwardedRef: t2 })) });
});
var Ee = ["isInteractive", "renderWrapper", "theme"];
var Fe = function(e2, t2, a3, i2) {
  return e2.find(function(e3) {
    return wn(e3.x + t2.left, e3.y + t2.top, e3.width, e3.height, a3, i2);
  });
};
var ze = function(i2) {
  var n2, l2 = i2.data, d2 = i2.indexBy, u = i2.keys, h = i2.margin, f = i2.width, g = i2.height, v = i2.groupMode, p = i2.layout, y = i2.valueScale, x = i2.indexScale, w = i2.padding, L2 = i2.innerPadding, C = i2.axisTop, W2 = i2.axisRight, M2 = i2.axisBottom, R2 = void 0 === M2 ? oe.axisBottom : M2, T3 = i2.axisLeft, H2 = void 0 === T3 ? oe.axisLeft : T3, P = i2.enableGridX, F = void 0 === P ? oe.enableGridX : P, z2 = i2.enableGridY, X = void 0 === z2 ? oe.enableGridY : z2, Y = i2.gridXValues, j3 = i2.gridYValues, K = i2.labelPosition, _ = void 0 === K ? oe.labelPosition : K, q2 = i2.labelOffset, J3 = void 0 === q2 ? oe.labelOffset : q2, U2 = i2.layers, Z2 = void 0 === U2 ? oe.layers : U2, $2 = i2.renderBar, ee2 = void 0 === $2 ? oe.renderBar : $2, te2 = i2.enableLabel, ae2 = void 0 === te2 ? oe.enableLabel : te2, ie2 = i2.label, ne2 = i2.labelSkipWidth, le2 = void 0 === ne2 ? oe.labelSkipWidth : ne2, re2 = i2.labelSkipHeight, de2 = void 0 === re2 ? oe.labelSkipHeight : re2, ue2 = i2.labelTextColor, se2 = i2.colorBy, ce2 = i2.colors, fe2 = i2.borderRadius, be2 = void 0 === fe2 ? oe.borderRadius : fe2, ge2 = i2.borderWidth, ve2 = void 0 === ge2 ? oe.borderWidth : ge2, me2 = i2.borderColor, pe2 = i2.annotations, ye2 = void 0 === pe2 ? oe.annotations : pe2, xe2 = i2.legendLabel, Se2 = i2.tooltipLabel, ke2 = i2.valueFormat, we2 = i2.isInteractive, Le2 = void 0 === we2 ? oe.isInteractive : we2, Ce2 = i2.tooltip, We2 = void 0 === Ce2 ? oe.tooltip : Ce2, Me2 = i2.onClick, Be2 = i2.onMouseEnter, Re2 = i2.onMouseLeave, Oe2 = i2.legends, Ve2 = i2.pixelRatio, Te2 = void 0 === Ve2 ? oe.pixelRatio : Ve2, He2 = i2.role, Pe2 = i2.forwardedRef, Ee2 = i2.enableTotals, ze2 = void 0 === Ee2 ? oe.enableTotals : Ee2, De2 = i2.totalsOffset, Ae2 = void 0 === De2 ? oe.totalsOffset : De2, Xe2 = (0, import_react.useRef)(null), Ye3 = M(), Ge2 = cn(f, g, h), Ne = Ge2.margin, je = Ge2.innerWidth, Ke = Ge2.innerHeight, _e = Ge2.outerWidth, qe = Ge2.outerHeight, Je = Ie({ indexBy: d2, label: ie2, tooltipLabel: Se2, valueFormat: ke2, colors: ce2, colorBy: se2, borderColor: me2, labelTextColor: ue2, groupMode: v, layout: p, data: l2, keys: u, margin: Ne, width: je, height: Ke, padding: w, innerPadding: L2, valueScale: y, indexScale: x, enableLabel: ae2, labelSkipWidth: le2, labelSkipHeight: de2, legends: Oe2, legendLabel: xe2, totalsOffset: Ae2 }), Qe = Je.bars, Ue = Je.barsWithValue, Ze = Je.xScale, $e = Je.yScale, et = Je.getLabel, tt = Je.getTooltipLabel, at = Je.getBorderColor, it = Je.getLabelColor, nt = Je.shouldRenderBarLabel, lt = Je.legendsWithData, rt = Je.barTotals, ot = Je.getColor, dt = z(), ut = dt.showTooltipFromEvent, st = dt.hideTooltip, ct = j2({ annotations: O({ data: Qe, annotations: ye2, getPosition: function(e2) {
    return { x: e2.x, y: e2.y };
  }, getDimensions: function(e2) {
    var t2 = e2.width, a3 = e2.height;
    return { width: t2, height: a3, size: Math.max(t2, a3) };
  } }) }), ht = (0, import_react.useMemo)(function() {
    return { borderRadius: be2, borderWidth: ve2, isInteractive: Le2, isFocusable: false, labelSkipWidth: le2, labelSkipHeight: de2, margin: Ne, width: f, height: g, innerWidth: je, innerHeight: Ke, bars: Qe, legendData: lt, enableLabel: ae2, xScale: Ze, yScale: $e, tooltip: We2, getTooltipLabel: tt, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getColor: ot };
  }, [be2, ve2, Le2, le2, de2, Ne, f, g, je, Ke, Qe, lt, ae2, Ze, $e, We2, tt, Me2, Be2, Re2, ot]), ft = hn(ke2), bt = he(p, null != (n2 = null == y ? void 0 : y.reverse) && n2, _, J3);
  (0, import_react.useEffect)(function() {
    if (Xe2.current) {
      Xe2.current.width = _e * Te2, Xe2.current.height = qe * Te2;
      var e2 = Xe2.current.getContext("2d");
      e2.scale(Te2, Te2), e2.fillStyle = Ye3.background, e2.fillRect(0, 0, _e, qe), e2.translate(Ne.left, Ne.top), Z2.forEach(function(t2) {
        "grid" === t2 ? "number" == typeof Ye3.grid.line.strokeWidth && Ye3.grid.line.strokeWidth > 0 && (e2.lineWidth = Ye3.grid.line.strokeWidth, e2.strokeStyle = Ye3.grid.line.stroke, F && q(e2, { width: je, height: Ke, scale: Ze, axis: "x", values: Y }), X && q(e2, { width: je, height: Ke, scale: $e, axis: "y", values: j3 })) : "axes" === t2 ? W(e2, { xScale: Ze, yScale: $e, width: je, height: Ke, top: C, right: W2, bottom: R2, left: H2, theme: Ye3 }) : "bars" === t2 ? (a(e2, Ye3.text), Ue.forEach(function(t3) {
          ee2(e2, Q({ bar: t3, borderColor: at(t3), borderRadius: be2, borderWidth: ve2, label: et(t3.data), shouldRenderLabel: nt(t3), labelStyle: Q({}, Ye3.labels.text, { fill: it(t3) }) }, bt(t3.width, t3.height)));
        })) : "legends" === t2 ? lt.forEach(function(t3) {
          var a3 = t3[0], i3 = t3[1];
          L(e2, Q({}, a3, { data: i3, containerWidth: je, containerHeight: Ke, theme: Ye3 }));
        }) : "annotations" === t2 ? J(e2, { annotations: ct, theme: Ye3 }) : "totals" === t2 && ze2 ? function(e3, t3, a3, i3) {
          void 0 === i3 && (i3 = oe.layout), a(e3, a3.labels.text), e3.textBaseline = "vertical" === i3 ? "alphabetic" : "middle", e3.textAlign = "vertical" === i3 ? "center" : "start", t3.forEach(function(t4) {
            d(e3, a3.labels.text, t4.formattedValue, t4.x, t4.y);
          });
        }(e2, rt, Ye3, p) : "function" == typeof t2 && t2(e2, ht);
      }), e2.save();
    }
  }, [R2, H2, W2, C, Ue, be2, ve2, ct, F, X, at, et, it, Y, j3, v, g, Ke, je, ht, Z2, p, lt, Ne.left, Ne.top, qe, _e, Te2, ee2, Ze, $e, nt, Ye3, f, rt, ze2, ft, bt]);
  var gt = (0, import_react.useCallback)(function(e2) {
    if (Qe && Xe2.current) {
      var a3 = kn(Xe2.current, e2), i3 = a3[0], n3 = a3[1], l3 = Fe(Qe, Ne, i3, n3);
      void 0 !== l3 ? (ut((0, import_react.createElement)(We2, Q({}, l3.data, { color: l3.color, label: l3.label, value: Number(l3.data.value) })), e2), "mouseenter" === e2.type && (null == Be2 || Be2(l3.data, e2))) : st();
    }
  }, [st, Ne, Be2, Qe, ut, We2]), vt = (0, import_react.useCallback)(function(e2) {
    if (Qe && Xe2.current) {
      st();
      var t2 = kn(Xe2.current, e2), a3 = t2[0], i3 = t2[1], n3 = Fe(Qe, Ne, a3, i3);
      n3 && (null == Re2 || Re2(n3.data, e2));
    }
  }, [st, Ne, Re2, Qe]), mt = (0, import_react.useCallback)(function(e2) {
    if (Qe && Xe2.current) {
      var t2 = kn(Xe2.current, e2), a3 = t2[0], i3 = t2[1], n3 = Fe(Qe, Ne, a3, i3);
      void 0 !== n3 && (null == Me2 || Me2(Q({}, n3.data, { color: n3.color }), e2));
    }
  }, [Ne, Me2, Qe]);
  return (0, import_jsx_runtime.jsx)("canvas", { ref: Rn(Xe2, Pe2), width: _e * Te2, height: qe * Te2, style: { width: _e, height: qe, cursor: Le2 ? "auto" : "normal" }, onMouseEnter: Le2 ? gt : void 0, onMouseMove: Le2 ? gt : void 0, onMouseLeave: Le2 ? vt : void 0, onClick: Le2 ? mt : void 0, role: He2 });
};
var De = (0, import_react.forwardRef)(function(e2, t2) {
  var a3 = e2.isInteractive, i2 = e2.renderWrapper, n2 = e2.theme, l2 = U(e2, Ee);
  return (0, import_jsx_runtime.jsx)(Fr, { isInteractive: a3, renderWrapper: i2, theme: n2, animate: false, children: (0, import_jsx_runtime.jsx)(ze, Q({}, l2, { isInteractive: a3, forwardedRef: t2 })) });
});
var Ae = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Xe = (0, import_react.forwardRef)(function(e2, t2) {
  var a3 = e2.defaultWidth, i2 = e2.defaultHeight, n2 = e2.onResize, l2 = e2.debounceResize, r2 = U(e2, Ae);
  return (0, import_jsx_runtime.jsx)($r, { defaultWidth: a3, defaultHeight: i2, onResize: n2, debounceResize: l2, children: function(e3) {
    var a4 = e3.width, i3 = e3.height;
    return (0, import_jsx_runtime.jsx)(Pe, Q({}, r2, { width: a4, height: i3, ref: t2 }));
  } });
});
var Ye2 = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Ge = (0, import_react.forwardRef)(function(e2, t2) {
  var a3 = e2.defaultWidth, i2 = e2.defaultHeight, n2 = e2.onResize, l2 = e2.debounceResize, r2 = U(e2, Ye2);
  return (0, import_jsx_runtime.jsx)($r, { defaultWidth: a3, defaultHeight: i2, onResize: n2, debounceResize: l2, children: function(e3) {
    var a4 = e3.width, i3 = e3.height;
    return (0, import_jsx_runtime.jsx)(De, Q({}, r2, { width: a4, height: i3, ref: t2 }));
  } });
});
export {
  Pe as Bar,
  De as BarCanvas,
  ae as BarItem,
  ne as BarTooltip,
  Ve as BarTotals,
  Xe as ResponsiveBar,
  Ge as ResponsiveBarCanvas,
  oe as canvasDefaultProps,
  le as commonDefaultProps,
  re as svgDefaultProps
};
//# sourceMappingURL=@nivo_bar.js.map
